// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package action

import (
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var _ protoreflect.List = (*_SenseMetadata_4_list)(nil)

type _SenseMetadata_4_list struct {
	list *[]string
}

func (x *_SenseMetadata_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_SenseMetadata_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_SenseMetadata_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_SenseMetadata_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_SenseMetadata_4_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message SenseMetadata at list field DdAndFingerprintsIds as it is not of Message kind"))
}

func (x *_SenseMetadata_4_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_SenseMetadata_4_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_SenseMetadata_4_list) IsValid() bool {
	return x.list != nil
}

var (
	md_SenseMetadata                         protoreflect.MessageDescriptor
	fd_SenseMetadata_data_hash               protoreflect.FieldDescriptor
	fd_SenseMetadata_dd_and_fingerprints_ic  protoreflect.FieldDescriptor
	fd_SenseMetadata_dd_and_fingerprints_max protoreflect.FieldDescriptor
	fd_SenseMetadata_dd_and_fingerprints_ids protoreflect.FieldDescriptor
)

func init() {
	file_lumera_action_metadata_proto_init()
	md_SenseMetadata = File_lumera_action_metadata_proto.Messages().ByName("SenseMetadata")
	fd_SenseMetadata_data_hash = md_SenseMetadata.Fields().ByName("data_hash")
	fd_SenseMetadata_dd_and_fingerprints_ic = md_SenseMetadata.Fields().ByName("dd_and_fingerprints_ic")
	fd_SenseMetadata_dd_and_fingerprints_max = md_SenseMetadata.Fields().ByName("dd_and_fingerprints_max")
	fd_SenseMetadata_dd_and_fingerprints_ids = md_SenseMetadata.Fields().ByName("dd_and_fingerprints_ids")
}

var _ protoreflect.Message = (*fastReflection_SenseMetadata)(nil)

type fastReflection_SenseMetadata SenseMetadata

func (x *SenseMetadata) ProtoReflect() protoreflect.Message {
	return (*fastReflection_SenseMetadata)(x)
}

func (x *SenseMetadata) slowProtoReflect() protoreflect.Message {
	mi := &file_lumera_action_metadata_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_SenseMetadata_messageType fastReflection_SenseMetadata_messageType
var _ protoreflect.MessageType = fastReflection_SenseMetadata_messageType{}

type fastReflection_SenseMetadata_messageType struct{}

func (x fastReflection_SenseMetadata_messageType) Zero() protoreflect.Message {
	return (*fastReflection_SenseMetadata)(nil)
}
func (x fastReflection_SenseMetadata_messageType) New() protoreflect.Message {
	return new(fastReflection_SenseMetadata)
}
func (x fastReflection_SenseMetadata_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_SenseMetadata
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_SenseMetadata) Descriptor() protoreflect.MessageDescriptor {
	return md_SenseMetadata
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_SenseMetadata) Type() protoreflect.MessageType {
	return _fastReflection_SenseMetadata_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_SenseMetadata) New() protoreflect.Message {
	return new(fastReflection_SenseMetadata)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_SenseMetadata) Interface() protoreflect.ProtoMessage {
	return (*SenseMetadata)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_SenseMetadata) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.DataHash != "" {
		value := protoreflect.ValueOfString(x.DataHash)
		if !f(fd_SenseMetadata_data_hash, value) {
			return
		}
	}
	if x.DdAndFingerprintsIc != int32(0) {
		value := protoreflect.ValueOfInt32(x.DdAndFingerprintsIc)
		if !f(fd_SenseMetadata_dd_and_fingerprints_ic, value) {
			return
		}
	}
	if x.DdAndFingerprintsMax != int32(0) {
		value := protoreflect.ValueOfInt32(x.DdAndFingerprintsMax)
		if !f(fd_SenseMetadata_dd_and_fingerprints_max, value) {
			return
		}
	}
	if len(x.DdAndFingerprintsIds) != 0 {
		value := protoreflect.ValueOfList(&_SenseMetadata_4_list{list: &x.DdAndFingerprintsIds})
		if !f(fd_SenseMetadata_dd_and_fingerprints_ids, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_SenseMetadata) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "lumera.action.SenseMetadata.data_hash":
		return x.DataHash != ""
	case "lumera.action.SenseMetadata.dd_and_fingerprints_ic":
		return x.DdAndFingerprintsIc != int32(0)
	case "lumera.action.SenseMetadata.dd_and_fingerprints_max":
		return x.DdAndFingerprintsMax != int32(0)
	case "lumera.action.SenseMetadata.dd_and_fingerprints_ids":
		return len(x.DdAndFingerprintsIds) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: lumera.action.SenseMetadata"))
		}
		panic(fmt.Errorf("message lumera.action.SenseMetadata does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SenseMetadata) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "lumera.action.SenseMetadata.data_hash":
		x.DataHash = ""
	case "lumera.action.SenseMetadata.dd_and_fingerprints_ic":
		x.DdAndFingerprintsIc = int32(0)
	case "lumera.action.SenseMetadata.dd_and_fingerprints_max":
		x.DdAndFingerprintsMax = int32(0)
	case "lumera.action.SenseMetadata.dd_and_fingerprints_ids":
		x.DdAndFingerprintsIds = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: lumera.action.SenseMetadata"))
		}
		panic(fmt.Errorf("message lumera.action.SenseMetadata does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_SenseMetadata) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "lumera.action.SenseMetadata.data_hash":
		value := x.DataHash
		return protoreflect.ValueOfString(value)
	case "lumera.action.SenseMetadata.dd_and_fingerprints_ic":
		value := x.DdAndFingerprintsIc
		return protoreflect.ValueOfInt32(value)
	case "lumera.action.SenseMetadata.dd_and_fingerprints_max":
		value := x.DdAndFingerprintsMax
		return protoreflect.ValueOfInt32(value)
	case "lumera.action.SenseMetadata.dd_and_fingerprints_ids":
		if len(x.DdAndFingerprintsIds) == 0 {
			return protoreflect.ValueOfList(&_SenseMetadata_4_list{})
		}
		listValue := &_SenseMetadata_4_list{list: &x.DdAndFingerprintsIds}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: lumera.action.SenseMetadata"))
		}
		panic(fmt.Errorf("message lumera.action.SenseMetadata does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SenseMetadata) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "lumera.action.SenseMetadata.data_hash":
		x.DataHash = value.Interface().(string)
	case "lumera.action.SenseMetadata.dd_and_fingerprints_ic":
		x.DdAndFingerprintsIc = int32(value.Int())
	case "lumera.action.SenseMetadata.dd_and_fingerprints_max":
		x.DdAndFingerprintsMax = int32(value.Int())
	case "lumera.action.SenseMetadata.dd_and_fingerprints_ids":
		lv := value.List()
		clv := lv.(*_SenseMetadata_4_list)
		x.DdAndFingerprintsIds = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: lumera.action.SenseMetadata"))
		}
		panic(fmt.Errorf("message lumera.action.SenseMetadata does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SenseMetadata) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "lumera.action.SenseMetadata.dd_and_fingerprints_ids":
		if x.DdAndFingerprintsIds == nil {
			x.DdAndFingerprintsIds = []string{}
		}
		value := &_SenseMetadata_4_list{list: &x.DdAndFingerprintsIds}
		return protoreflect.ValueOfList(value)
	case "lumera.action.SenseMetadata.data_hash":
		panic(fmt.Errorf("field data_hash of message lumera.action.SenseMetadata is not mutable"))
	case "lumera.action.SenseMetadata.dd_and_fingerprints_ic":
		panic(fmt.Errorf("field dd_and_fingerprints_ic of message lumera.action.SenseMetadata is not mutable"))
	case "lumera.action.SenseMetadata.dd_and_fingerprints_max":
		panic(fmt.Errorf("field dd_and_fingerprints_max of message lumera.action.SenseMetadata is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: lumera.action.SenseMetadata"))
		}
		panic(fmt.Errorf("message lumera.action.SenseMetadata does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_SenseMetadata) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "lumera.action.SenseMetadata.data_hash":
		return protoreflect.ValueOfString("")
	case "lumera.action.SenseMetadata.dd_and_fingerprints_ic":
		return protoreflect.ValueOfInt32(int32(0))
	case "lumera.action.SenseMetadata.dd_and_fingerprints_max":
		return protoreflect.ValueOfInt32(int32(0))
	case "lumera.action.SenseMetadata.dd_and_fingerprints_ids":
		list := []string{}
		return protoreflect.ValueOfList(&_SenseMetadata_4_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: lumera.action.SenseMetadata"))
		}
		panic(fmt.Errorf("message lumera.action.SenseMetadata does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_SenseMetadata) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in lumera.action.SenseMetadata", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_SenseMetadata) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SenseMetadata) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_SenseMetadata) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_SenseMetadata) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*SenseMetadata)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.DataHash)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.DdAndFingerprintsIc != 0 {
			n += 1 + runtime.Sov(uint64(x.DdAndFingerprintsIc))
		}
		if x.DdAndFingerprintsMax != 0 {
			n += 1 + runtime.Sov(uint64(x.DdAndFingerprintsMax))
		}
		if len(x.DdAndFingerprintsIds) > 0 {
			for _, s := range x.DdAndFingerprintsIds {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*SenseMetadata)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.DdAndFingerprintsIds) > 0 {
			for iNdEx := len(x.DdAndFingerprintsIds) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.DdAndFingerprintsIds[iNdEx])
				copy(dAtA[i:], x.DdAndFingerprintsIds[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.DdAndFingerprintsIds[iNdEx])))
				i--
				dAtA[i] = 0x22
			}
		}
		if x.DdAndFingerprintsMax != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.DdAndFingerprintsMax))
			i--
			dAtA[i] = 0x18
		}
		if x.DdAndFingerprintsIc != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.DdAndFingerprintsIc))
			i--
			dAtA[i] = 0x10
		}
		if len(x.DataHash) > 0 {
			i -= len(x.DataHash)
			copy(dAtA[i:], x.DataHash)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.DataHash)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*SenseMetadata)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SenseMetadata: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SenseMetadata: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DataHash", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DataHash = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DdAndFingerprintsIc", wireType)
				}
				x.DdAndFingerprintsIc = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.DdAndFingerprintsIc |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DdAndFingerprintsMax", wireType)
				}
				x.DdAndFingerprintsMax = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.DdAndFingerprintsMax |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DdAndFingerprintsIds", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DdAndFingerprintsIds = append(x.DdAndFingerprintsIds, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_CascadeMetadata_3_list)(nil)

type _CascadeMetadata_3_list struct {
	list *[]string
}

func (x *_CascadeMetadata_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_CascadeMetadata_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_CascadeMetadata_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_CascadeMetadata_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_CascadeMetadata_3_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message CascadeMetadata at list field RqIds as it is not of Message kind"))
}

func (x *_CascadeMetadata_3_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_CascadeMetadata_3_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_CascadeMetadata_3_list) IsValid() bool {
	return x.list != nil
}

var (
	md_CascadeMetadata           protoreflect.MessageDescriptor
	fd_CascadeMetadata_data_hash protoreflect.FieldDescriptor
	fd_CascadeMetadata_file_name protoreflect.FieldDescriptor
	fd_CascadeMetadata_rq_ids    protoreflect.FieldDescriptor
	fd_CascadeMetadata_rq_max    protoreflect.FieldDescriptor
	fd_CascadeMetadata_rq_ic     protoreflect.FieldDescriptor
	fd_CascadeMetadata_rq_oti    protoreflect.FieldDescriptor
)

func init() {
	file_lumera_action_metadata_proto_init()
	md_CascadeMetadata = File_lumera_action_metadata_proto.Messages().ByName("CascadeMetadata")
	fd_CascadeMetadata_data_hash = md_CascadeMetadata.Fields().ByName("data_hash")
	fd_CascadeMetadata_file_name = md_CascadeMetadata.Fields().ByName("file_name")
	fd_CascadeMetadata_rq_ids = md_CascadeMetadata.Fields().ByName("rq_ids")
	fd_CascadeMetadata_rq_max = md_CascadeMetadata.Fields().ByName("rq_max")
	fd_CascadeMetadata_rq_ic = md_CascadeMetadata.Fields().ByName("rq_ic")
	fd_CascadeMetadata_rq_oti = md_CascadeMetadata.Fields().ByName("rq_oti")
}

var _ protoreflect.Message = (*fastReflection_CascadeMetadata)(nil)

type fastReflection_CascadeMetadata CascadeMetadata

func (x *CascadeMetadata) ProtoReflect() protoreflect.Message {
	return (*fastReflection_CascadeMetadata)(x)
}

func (x *CascadeMetadata) slowProtoReflect() protoreflect.Message {
	mi := &file_lumera_action_metadata_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_CascadeMetadata_messageType fastReflection_CascadeMetadata_messageType
var _ protoreflect.MessageType = fastReflection_CascadeMetadata_messageType{}

type fastReflection_CascadeMetadata_messageType struct{}

func (x fastReflection_CascadeMetadata_messageType) Zero() protoreflect.Message {
	return (*fastReflection_CascadeMetadata)(nil)
}
func (x fastReflection_CascadeMetadata_messageType) New() protoreflect.Message {
	return new(fastReflection_CascadeMetadata)
}
func (x fastReflection_CascadeMetadata_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_CascadeMetadata
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_CascadeMetadata) Descriptor() protoreflect.MessageDescriptor {
	return md_CascadeMetadata
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_CascadeMetadata) Type() protoreflect.MessageType {
	return _fastReflection_CascadeMetadata_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_CascadeMetadata) New() protoreflect.Message {
	return new(fastReflection_CascadeMetadata)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_CascadeMetadata) Interface() protoreflect.ProtoMessage {
	return (*CascadeMetadata)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_CascadeMetadata) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.DataHash != "" {
		value := protoreflect.ValueOfString(x.DataHash)
		if !f(fd_CascadeMetadata_data_hash, value) {
			return
		}
	}
	if x.FileName != "" {
		value := protoreflect.ValueOfString(x.FileName)
		if !f(fd_CascadeMetadata_file_name, value) {
			return
		}
	}
	if len(x.RqIds) != 0 {
		value := protoreflect.ValueOfList(&_CascadeMetadata_3_list{list: &x.RqIds})
		if !f(fd_CascadeMetadata_rq_ids, value) {
			return
		}
	}
	if x.RqMax != int32(0) {
		value := protoreflect.ValueOfInt32(x.RqMax)
		if !f(fd_CascadeMetadata_rq_max, value) {
			return
		}
	}
	if x.RqIc != int32(0) {
		value := protoreflect.ValueOfInt32(x.RqIc)
		if !f(fd_CascadeMetadata_rq_ic, value) {
			return
		}
	}
	if len(x.RqOti) != 0 {
		value := protoreflect.ValueOfBytes(x.RqOti)
		if !f(fd_CascadeMetadata_rq_oti, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_CascadeMetadata) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "lumera.action.CascadeMetadata.data_hash":
		return x.DataHash != ""
	case "lumera.action.CascadeMetadata.file_name":
		return x.FileName != ""
	case "lumera.action.CascadeMetadata.rq_ids":
		return len(x.RqIds) != 0
	case "lumera.action.CascadeMetadata.rq_max":
		return x.RqMax != int32(0)
	case "lumera.action.CascadeMetadata.rq_ic":
		return x.RqIc != int32(0)
	case "lumera.action.CascadeMetadata.rq_oti":
		return len(x.RqOti) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: lumera.action.CascadeMetadata"))
		}
		panic(fmt.Errorf("message lumera.action.CascadeMetadata does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CascadeMetadata) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "lumera.action.CascadeMetadata.data_hash":
		x.DataHash = ""
	case "lumera.action.CascadeMetadata.file_name":
		x.FileName = ""
	case "lumera.action.CascadeMetadata.rq_ids":
		x.RqIds = nil
	case "lumera.action.CascadeMetadata.rq_max":
		x.RqMax = int32(0)
	case "lumera.action.CascadeMetadata.rq_ic":
		x.RqIc = int32(0)
	case "lumera.action.CascadeMetadata.rq_oti":
		x.RqOti = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: lumera.action.CascadeMetadata"))
		}
		panic(fmt.Errorf("message lumera.action.CascadeMetadata does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_CascadeMetadata) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "lumera.action.CascadeMetadata.data_hash":
		value := x.DataHash
		return protoreflect.ValueOfString(value)
	case "lumera.action.CascadeMetadata.file_name":
		value := x.FileName
		return protoreflect.ValueOfString(value)
	case "lumera.action.CascadeMetadata.rq_ids":
		if len(x.RqIds) == 0 {
			return protoreflect.ValueOfList(&_CascadeMetadata_3_list{})
		}
		listValue := &_CascadeMetadata_3_list{list: &x.RqIds}
		return protoreflect.ValueOfList(listValue)
	case "lumera.action.CascadeMetadata.rq_max":
		value := x.RqMax
		return protoreflect.ValueOfInt32(value)
	case "lumera.action.CascadeMetadata.rq_ic":
		value := x.RqIc
		return protoreflect.ValueOfInt32(value)
	case "lumera.action.CascadeMetadata.rq_oti":
		value := x.RqOti
		return protoreflect.ValueOfBytes(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: lumera.action.CascadeMetadata"))
		}
		panic(fmt.Errorf("message lumera.action.CascadeMetadata does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CascadeMetadata) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "lumera.action.CascadeMetadata.data_hash":
		x.DataHash = value.Interface().(string)
	case "lumera.action.CascadeMetadata.file_name":
		x.FileName = value.Interface().(string)
	case "lumera.action.CascadeMetadata.rq_ids":
		lv := value.List()
		clv := lv.(*_CascadeMetadata_3_list)
		x.RqIds = *clv.list
	case "lumera.action.CascadeMetadata.rq_max":
		x.RqMax = int32(value.Int())
	case "lumera.action.CascadeMetadata.rq_ic":
		x.RqIc = int32(value.Int())
	case "lumera.action.CascadeMetadata.rq_oti":
		x.RqOti = value.Bytes()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: lumera.action.CascadeMetadata"))
		}
		panic(fmt.Errorf("message lumera.action.CascadeMetadata does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CascadeMetadata) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "lumera.action.CascadeMetadata.rq_ids":
		if x.RqIds == nil {
			x.RqIds = []string{}
		}
		value := &_CascadeMetadata_3_list{list: &x.RqIds}
		return protoreflect.ValueOfList(value)
	case "lumera.action.CascadeMetadata.data_hash":
		panic(fmt.Errorf("field data_hash of message lumera.action.CascadeMetadata is not mutable"))
	case "lumera.action.CascadeMetadata.file_name":
		panic(fmt.Errorf("field file_name of message lumera.action.CascadeMetadata is not mutable"))
	case "lumera.action.CascadeMetadata.rq_max":
		panic(fmt.Errorf("field rq_max of message lumera.action.CascadeMetadata is not mutable"))
	case "lumera.action.CascadeMetadata.rq_ic":
		panic(fmt.Errorf("field rq_ic of message lumera.action.CascadeMetadata is not mutable"))
	case "lumera.action.CascadeMetadata.rq_oti":
		panic(fmt.Errorf("field rq_oti of message lumera.action.CascadeMetadata is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: lumera.action.CascadeMetadata"))
		}
		panic(fmt.Errorf("message lumera.action.CascadeMetadata does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_CascadeMetadata) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "lumera.action.CascadeMetadata.data_hash":
		return protoreflect.ValueOfString("")
	case "lumera.action.CascadeMetadata.file_name":
		return protoreflect.ValueOfString("")
	case "lumera.action.CascadeMetadata.rq_ids":
		list := []string{}
		return protoreflect.ValueOfList(&_CascadeMetadata_3_list{list: &list})
	case "lumera.action.CascadeMetadata.rq_max":
		return protoreflect.ValueOfInt32(int32(0))
	case "lumera.action.CascadeMetadata.rq_ic":
		return protoreflect.ValueOfInt32(int32(0))
	case "lumera.action.CascadeMetadata.rq_oti":
		return protoreflect.ValueOfBytes(nil)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: lumera.action.CascadeMetadata"))
		}
		panic(fmt.Errorf("message lumera.action.CascadeMetadata does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_CascadeMetadata) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in lumera.action.CascadeMetadata", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_CascadeMetadata) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CascadeMetadata) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_CascadeMetadata) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_CascadeMetadata) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*CascadeMetadata)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.DataHash)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.FileName)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.RqIds) > 0 {
			for _, s := range x.RqIds {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.RqMax != 0 {
			n += 1 + runtime.Sov(uint64(x.RqMax))
		}
		if x.RqIc != 0 {
			n += 1 + runtime.Sov(uint64(x.RqIc))
		}
		l = len(x.RqOti)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*CascadeMetadata)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.RqOti) > 0 {
			i -= len(x.RqOti)
			copy(dAtA[i:], x.RqOti)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RqOti)))
			i--
			dAtA[i] = 0x32
		}
		if x.RqIc != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.RqIc))
			i--
			dAtA[i] = 0x28
		}
		if x.RqMax != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.RqMax))
			i--
			dAtA[i] = 0x20
		}
		if len(x.RqIds) > 0 {
			for iNdEx := len(x.RqIds) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.RqIds[iNdEx])
				copy(dAtA[i:], x.RqIds[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RqIds[iNdEx])))
				i--
				dAtA[i] = 0x1a
			}
		}
		if len(x.FileName) > 0 {
			i -= len(x.FileName)
			copy(dAtA[i:], x.FileName)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.FileName)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.DataHash) > 0 {
			i -= len(x.DataHash)
			copy(dAtA[i:], x.DataHash)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.DataHash)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*CascadeMetadata)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: CascadeMetadata: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: CascadeMetadata: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DataHash", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DataHash = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field FileName", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.FileName = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RqIds", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RqIds = append(x.RqIds, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RqMax", wireType)
				}
				x.RqMax = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.RqMax |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RqIc", wireType)
				}
				x.RqIc = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.RqIc |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RqOti", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RqOti = append(x.RqOti[:0], dAtA[iNdEx:postIndex]...)
				if x.RqOti == nil {
					x.RqOti = []byte{}
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_Metadata                  protoreflect.MessageDescriptor
	fd_Metadata_sense_metadata   protoreflect.FieldDescriptor
	fd_Metadata_cascade_metadata protoreflect.FieldDescriptor
)

func init() {
	file_lumera_action_metadata_proto_init()
	md_Metadata = File_lumera_action_metadata_proto.Messages().ByName("Metadata")
	fd_Metadata_sense_metadata = md_Metadata.Fields().ByName("sense_metadata")
	fd_Metadata_cascade_metadata = md_Metadata.Fields().ByName("cascade_metadata")
}

var _ protoreflect.Message = (*fastReflection_Metadata)(nil)

type fastReflection_Metadata Metadata

func (x *Metadata) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Metadata)(x)
}

func (x *Metadata) slowProtoReflect() protoreflect.Message {
	mi := &file_lumera_action_metadata_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Metadata_messageType fastReflection_Metadata_messageType
var _ protoreflect.MessageType = fastReflection_Metadata_messageType{}

type fastReflection_Metadata_messageType struct{}

func (x fastReflection_Metadata_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Metadata)(nil)
}
func (x fastReflection_Metadata_messageType) New() protoreflect.Message {
	return new(fastReflection_Metadata)
}
func (x fastReflection_Metadata_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Metadata
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Metadata) Descriptor() protoreflect.MessageDescriptor {
	return md_Metadata
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Metadata) Type() protoreflect.MessageType {
	return _fastReflection_Metadata_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Metadata) New() protoreflect.Message {
	return new(fastReflection_Metadata)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Metadata) Interface() protoreflect.ProtoMessage {
	return (*Metadata)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Metadata) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.MetadataType != nil {
		switch o := x.MetadataType.(type) {
		case *Metadata_SenseMetadata:
			v := o.SenseMetadata
			value := protoreflect.ValueOfMessage(v.ProtoReflect())
			if !f(fd_Metadata_sense_metadata, value) {
				return
			}
		case *Metadata_CascadeMetadata:
			v := o.CascadeMetadata
			value := protoreflect.ValueOfMessage(v.ProtoReflect())
			if !f(fd_Metadata_cascade_metadata, value) {
				return
			}
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Metadata) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "lumera.action.Metadata.sense_metadata":
		if x.MetadataType == nil {
			return false
		} else if _, ok := x.MetadataType.(*Metadata_SenseMetadata); ok {
			return true
		} else {
			return false
		}
	case "lumera.action.Metadata.cascade_metadata":
		if x.MetadataType == nil {
			return false
		} else if _, ok := x.MetadataType.(*Metadata_CascadeMetadata); ok {
			return true
		} else {
			return false
		}
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: lumera.action.Metadata"))
		}
		panic(fmt.Errorf("message lumera.action.Metadata does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Metadata) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "lumera.action.Metadata.sense_metadata":
		x.MetadataType = nil
	case "lumera.action.Metadata.cascade_metadata":
		x.MetadataType = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: lumera.action.Metadata"))
		}
		panic(fmt.Errorf("message lumera.action.Metadata does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Metadata) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "lumera.action.Metadata.sense_metadata":
		if x.MetadataType == nil {
			return protoreflect.ValueOfMessage((*SenseMetadata)(nil).ProtoReflect())
		} else if v, ok := x.MetadataType.(*Metadata_SenseMetadata); ok {
			return protoreflect.ValueOfMessage(v.SenseMetadata.ProtoReflect())
		} else {
			return protoreflect.ValueOfMessage((*SenseMetadata)(nil).ProtoReflect())
		}
	case "lumera.action.Metadata.cascade_metadata":
		if x.MetadataType == nil {
			return protoreflect.ValueOfMessage((*CascadeMetadata)(nil).ProtoReflect())
		} else if v, ok := x.MetadataType.(*Metadata_CascadeMetadata); ok {
			return protoreflect.ValueOfMessage(v.CascadeMetadata.ProtoReflect())
		} else {
			return protoreflect.ValueOfMessage((*CascadeMetadata)(nil).ProtoReflect())
		}
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: lumera.action.Metadata"))
		}
		panic(fmt.Errorf("message lumera.action.Metadata does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Metadata) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "lumera.action.Metadata.sense_metadata":
		cv := value.Message().Interface().(*SenseMetadata)
		x.MetadataType = &Metadata_SenseMetadata{SenseMetadata: cv}
	case "lumera.action.Metadata.cascade_metadata":
		cv := value.Message().Interface().(*CascadeMetadata)
		x.MetadataType = &Metadata_CascadeMetadata{CascadeMetadata: cv}
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: lumera.action.Metadata"))
		}
		panic(fmt.Errorf("message lumera.action.Metadata does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Metadata) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "lumera.action.Metadata.sense_metadata":
		if x.MetadataType == nil {
			value := &SenseMetadata{}
			oneofValue := &Metadata_SenseMetadata{SenseMetadata: value}
			x.MetadataType = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
		switch m := x.MetadataType.(type) {
		case *Metadata_SenseMetadata:
			return protoreflect.ValueOfMessage(m.SenseMetadata.ProtoReflect())
		default:
			value := &SenseMetadata{}
			oneofValue := &Metadata_SenseMetadata{SenseMetadata: value}
			x.MetadataType = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
	case "lumera.action.Metadata.cascade_metadata":
		if x.MetadataType == nil {
			value := &CascadeMetadata{}
			oneofValue := &Metadata_CascadeMetadata{CascadeMetadata: value}
			x.MetadataType = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
		switch m := x.MetadataType.(type) {
		case *Metadata_CascadeMetadata:
			return protoreflect.ValueOfMessage(m.CascadeMetadata.ProtoReflect())
		default:
			value := &CascadeMetadata{}
			oneofValue := &Metadata_CascadeMetadata{CascadeMetadata: value}
			x.MetadataType = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: lumera.action.Metadata"))
		}
		panic(fmt.Errorf("message lumera.action.Metadata does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Metadata) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "lumera.action.Metadata.sense_metadata":
		value := &SenseMetadata{}
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "lumera.action.Metadata.cascade_metadata":
		value := &CascadeMetadata{}
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: lumera.action.Metadata"))
		}
		panic(fmt.Errorf("message lumera.action.Metadata does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Metadata) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	case "lumera.action.Metadata.metadata_type":
		if x.MetadataType == nil {
			return nil
		}
		switch x.MetadataType.(type) {
		case *Metadata_SenseMetadata:
			return x.Descriptor().Fields().ByName("sense_metadata")
		case *Metadata_CascadeMetadata:
			return x.Descriptor().Fields().ByName("cascade_metadata")
		}
	default:
		panic(fmt.Errorf("%s is not a oneof field in lumera.action.Metadata", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Metadata) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Metadata) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Metadata) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Metadata) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Metadata)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		switch x := x.MetadataType.(type) {
		case *Metadata_SenseMetadata:
			if x == nil {
				break
			}
			l = options.Size(x.SenseMetadata)
			n += 1 + l + runtime.Sov(uint64(l))
		case *Metadata_CascadeMetadata:
			if x == nil {
				break
			}
			l = options.Size(x.CascadeMetadata)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Metadata)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		switch x := x.MetadataType.(type) {
		case *Metadata_SenseMetadata:
			encoded, err := options.Marshal(x.SenseMetadata)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		case *Metadata_CascadeMetadata:
			encoded, err := options.Marshal(x.CascadeMetadata)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Metadata)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Metadata: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Metadata: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SenseMetadata", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				v := &SenseMetadata{}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], v); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				x.MetadataType = &Metadata_SenseMetadata{v}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CascadeMetadata", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				v := &CascadeMetadata{}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], v); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				x.MetadataType = &Metadata_CascadeMetadata{v}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: lumera/action/metadata.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SenseMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataHash             string   `protobuf:"bytes,1,opt,name=data_hash,json=dataHash,proto3" json:"data_hash,omitempty"`
	DdAndFingerprintsIc  int32    `protobuf:"varint,2,opt,name=dd_and_fingerprints_ic,json=ddAndFingerprintsIc,proto3" json:"dd_and_fingerprints_ic,omitempty"`
	DdAndFingerprintsMax int32    `protobuf:"varint,3,opt,name=dd_and_fingerprints_max,json=ddAndFingerprintsMax,proto3" json:"dd_and_fingerprints_max,omitempty"`
	DdAndFingerprintsIds []string `protobuf:"bytes,4,rep,name=dd_and_fingerprints_ids,json=ddAndFingerprintsIds,proto3" json:"dd_and_fingerprints_ids,omitempty"`
}

func (x *SenseMetadata) Reset() {
	*x = SenseMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumera_action_metadata_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SenseMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SenseMetadata) ProtoMessage() {}

// Deprecated: Use SenseMetadata.ProtoReflect.Descriptor instead.
func (*SenseMetadata) Descriptor() ([]byte, []int) {
	return file_lumera_action_metadata_proto_rawDescGZIP(), []int{0}
}

func (x *SenseMetadata) GetDataHash() string {
	if x != nil {
		return x.DataHash
	}
	return ""
}

func (x *SenseMetadata) GetDdAndFingerprintsIc() int32 {
	if x != nil {
		return x.DdAndFingerprintsIc
	}
	return 0
}

func (x *SenseMetadata) GetDdAndFingerprintsMax() int32 {
	if x != nil {
		return x.DdAndFingerprintsMax
	}
	return 0
}

func (x *SenseMetadata) GetDdAndFingerprintsIds() []string {
	if x != nil {
		return x.DdAndFingerprintsIds
	}
	return nil
}

type CascadeMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataHash string   `protobuf:"bytes,1,opt,name=data_hash,json=dataHash,proto3" json:"data_hash,omitempty"`
	FileName string   `protobuf:"bytes,2,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	RqIds    []string `protobuf:"bytes,3,rep,name=rq_ids,json=rqIds,proto3" json:"rq_ids,omitempty"`
	RqMax    int32    `protobuf:"varint,4,opt,name=rq_max,json=rqMax,proto3" json:"rq_max,omitempty"`
	RqIc     int32    `protobuf:"varint,5,opt,name=rq_ic,json=rqIc,proto3" json:"rq_ic,omitempty"`
	RqOti    []byte   `protobuf:"bytes,6,opt,name=rq_oti,json=rqOti,proto3" json:"rq_oti,omitempty"`
}

func (x *CascadeMetadata) Reset() {
	*x = CascadeMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumera_action_metadata_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CascadeMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CascadeMetadata) ProtoMessage() {}

// Deprecated: Use CascadeMetadata.ProtoReflect.Descriptor instead.
func (*CascadeMetadata) Descriptor() ([]byte, []int) {
	return file_lumera_action_metadata_proto_rawDescGZIP(), []int{1}
}

func (x *CascadeMetadata) GetDataHash() string {
	if x != nil {
		return x.DataHash
	}
	return ""
}

func (x *CascadeMetadata) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *CascadeMetadata) GetRqIds() []string {
	if x != nil {
		return x.RqIds
	}
	return nil
}

func (x *CascadeMetadata) GetRqMax() int32 {
	if x != nil {
		return x.RqMax
	}
	return 0
}

func (x *CascadeMetadata) GetRqIc() int32 {
	if x != nil {
		return x.RqIc
	}
	return 0
}

func (x *CascadeMetadata) GetRqOti() []byte {
	if x != nil {
		return x.RqOti
	}
	return nil
}

type Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to MetadataType:
	//
	//	*Metadata_SenseMetadata
	//	*Metadata_CascadeMetadata
	MetadataType isMetadata_MetadataType `protobuf_oneof:"metadata_type"`
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumera_action_metadata_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_lumera_action_metadata_proto_rawDescGZIP(), []int{2}
}

func (x *Metadata) GetMetadataType() isMetadata_MetadataType {
	if x != nil {
		return x.MetadataType
	}
	return nil
}

func (x *Metadata) GetSenseMetadata() *SenseMetadata {
	if x, ok := x.GetMetadataType().(*Metadata_SenseMetadata); ok {
		return x.SenseMetadata
	}
	return nil
}

func (x *Metadata) GetCascadeMetadata() *CascadeMetadata {
	if x, ok := x.GetMetadataType().(*Metadata_CascadeMetadata); ok {
		return x.CascadeMetadata
	}
	return nil
}

type isMetadata_MetadataType interface {
	isMetadata_MetadataType()
}

type Metadata_SenseMetadata struct {
	SenseMetadata *SenseMetadata `protobuf:"bytes,1,opt,name=sense_metadata,json=senseMetadata,proto3,oneof"`
}

type Metadata_CascadeMetadata struct {
	CascadeMetadata *CascadeMetadata `protobuf:"bytes,2,opt,name=cascade_metadata,json=cascadeMetadata,proto3,oneof"`
}

func (*Metadata_SenseMetadata) isMetadata_MetadataType() {}

func (*Metadata_CascadeMetadata) isMetadata_MetadataType() {}

var File_lumera_action_metadata_proto protoreflect.FileDescriptor

var file_lumera_action_metadata_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x6c, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d,
	0x6c, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xcf, 0x01,
	0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x48, 0x61, 0x73, 0x68, 0x12, 0x33, 0x0a, 0x16,
	0x64, 0x64, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69,
	0x6e, 0x74, 0x73, 0x5f, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x64, 0x64,
	0x41, 0x6e, 0x64, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x73, 0x49,
	0x63, 0x12, 0x35, 0x0a, 0x17, 0x64, 0x64, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x66, 0x69, 0x6e, 0x67,
	0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x73, 0x5f, 0x6d, 0x61, 0x78, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x14, 0x64, 0x64, 0x41, 0x6e, 0x64, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70,
	0x72, 0x69, 0x6e, 0x74, 0x73, 0x4d, 0x61, 0x78, 0x12, 0x35, 0x0a, 0x17, 0x64, 0x64, 0x5f, 0x61,
	0x6e, 0x64, 0x5f, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x73, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x14, 0x64, 0x64, 0x41, 0x6e, 0x64,
	0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x73, 0x49, 0x64, 0x73, 0x22,
	0xa5, 0x01, 0x0a, 0x0f, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a,
	0x06, 0x72, 0x71, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x72,
	0x71, 0x49, 0x64, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x71, 0x5f, 0x6d, 0x61, 0x78, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x72, 0x71, 0x4d, 0x61, 0x78, 0x12, 0x13, 0x0a, 0x05, 0x72,
	0x71, 0x5f, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x71, 0x49, 0x63,
	0x12, 0x15, 0x0a, 0x06, 0x72, 0x71, 0x5f, 0x6f, 0x74, 0x69, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x72, 0x71, 0x4f, 0x74, 0x69, 0x22, 0xaf, 0x01, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x0e, 0x73, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c,
	0x75, 0x6d, 0x65, 0x72, 0x61, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x65,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4b, 0x0a, 0x10, 0x63,
	0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6c, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x2e, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0f, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0f, 0x0a, 0x0d, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0xab, 0x01, 0x0a, 0x11, 0x63, 0x6f,
	0x6d, 0x2e, 0x6c, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4c, 0x75, 0x6d,
	0x65, 0x72, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x6c, 0x75, 0x6d, 0x65,
	0x72, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x2f, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0xa2, 0x02, 0x03, 0x4c, 0x41, 0x58, 0xaa, 0x02, 0x0d, 0x4c, 0x75, 0x6d,
	0x65, 0x72, 0x61, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0x02, 0x0d, 0x4c, 0x75, 0x6d,
	0x65, 0x72, 0x61, 0x5c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0xe2, 0x02, 0x19, 0x4c, 0x75, 0x6d,
	0x65, 0x72, 0x61, 0x5c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0e, 0x4c, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x3a,
	0x3a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_lumera_action_metadata_proto_rawDescOnce sync.Once
	file_lumera_action_metadata_proto_rawDescData = file_lumera_action_metadata_proto_rawDesc
)

func file_lumera_action_metadata_proto_rawDescGZIP() []byte {
	file_lumera_action_metadata_proto_rawDescOnce.Do(func() {
		file_lumera_action_metadata_proto_rawDescData = protoimpl.X.CompressGZIP(file_lumera_action_metadata_proto_rawDescData)
	})
	return file_lumera_action_metadata_proto_rawDescData
}

var file_lumera_action_metadata_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_lumera_action_metadata_proto_goTypes = []interface{}{
	(*SenseMetadata)(nil),   // 0: lumera.action.SenseMetadata
	(*CascadeMetadata)(nil), // 1: lumera.action.CascadeMetadata
	(*Metadata)(nil),        // 2: lumera.action.Metadata
}
var file_lumera_action_metadata_proto_depIdxs = []int32{
	0, // 0: lumera.action.Metadata.sense_metadata:type_name -> lumera.action.SenseMetadata
	1, // 1: lumera.action.Metadata.cascade_metadata:type_name -> lumera.action.CascadeMetadata
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_lumera_action_metadata_proto_init() }
func file_lumera_action_metadata_proto_init() {
	if File_lumera_action_metadata_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_lumera_action_metadata_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SenseMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumera_action_metadata_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CascadeMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumera_action_metadata_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_lumera_action_metadata_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Metadata_SenseMetadata)(nil),
		(*Metadata_CascadeMetadata)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lumera_action_metadata_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_lumera_action_metadata_proto_goTypes,
		DependencyIndexes: file_lumera_action_metadata_proto_depIdxs,
		MessageInfos:      file_lumera_action_metadata_proto_msgTypes,
	}.Build()
	File_lumera_action_metadata_proto = out.File
	file_lumera_action_metadata_proto_rawDesc = nil
	file_lumera_action_metadata_proto_goTypes = nil
	file_lumera_action_metadata_proto_depIdxs = nil
}
