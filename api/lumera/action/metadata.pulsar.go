// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package action

import (
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var _ protoreflect.List = (*_SenseMetadata_6_list)(nil)

type _SenseMetadata_6_list struct {
	list *[]string
}

func (x *_SenseMetadata_6_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_SenseMetadata_6_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_SenseMetadata_6_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_SenseMetadata_6_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_SenseMetadata_6_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message SenseMetadata at list field DdAndFingerprintsIds as it is not of Message kind"))
}

func (x *_SenseMetadata_6_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_SenseMetadata_6_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_SenseMetadata_6_list) IsValid() bool {
	return x.list != nil
}

var (
	md_SenseMetadata                         protoreflect.MessageDescriptor
	fd_SenseMetadata_data_hash               protoreflect.FieldDescriptor
	fd_SenseMetadata_dd_and_fingerprints_ic  protoreflect.FieldDescriptor
	fd_SenseMetadata_collection_id           protoreflect.FieldDescriptor
	fd_SenseMetadata_group_id                protoreflect.FieldDescriptor
	fd_SenseMetadata_dd_and_fingerprints_max protoreflect.FieldDescriptor
	fd_SenseMetadata_dd_and_fingerprints_ids protoreflect.FieldDescriptor
	fd_SenseMetadata_signatures              protoreflect.FieldDescriptor
)

func init() {
	file_lumera_action_metadata_proto_init()
	md_SenseMetadata = File_lumera_action_metadata_proto.Messages().ByName("SenseMetadata")
	fd_SenseMetadata_data_hash = md_SenseMetadata.Fields().ByName("data_hash")
	fd_SenseMetadata_dd_and_fingerprints_ic = md_SenseMetadata.Fields().ByName("dd_and_fingerprints_ic")
	fd_SenseMetadata_collection_id = md_SenseMetadata.Fields().ByName("collection_id")
	fd_SenseMetadata_group_id = md_SenseMetadata.Fields().ByName("group_id")
	fd_SenseMetadata_dd_and_fingerprints_max = md_SenseMetadata.Fields().ByName("dd_and_fingerprints_max")
	fd_SenseMetadata_dd_and_fingerprints_ids = md_SenseMetadata.Fields().ByName("dd_and_fingerprints_ids")
	fd_SenseMetadata_signatures = md_SenseMetadata.Fields().ByName("signatures")
}

var _ protoreflect.Message = (*fastReflection_SenseMetadata)(nil)

type fastReflection_SenseMetadata SenseMetadata

func (x *SenseMetadata) ProtoReflect() protoreflect.Message {
	return (*fastReflection_SenseMetadata)(x)
}

func (x *SenseMetadata) slowProtoReflect() protoreflect.Message {
	mi := &file_lumera_action_metadata_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_SenseMetadata_messageType fastReflection_SenseMetadata_messageType
var _ protoreflect.MessageType = fastReflection_SenseMetadata_messageType{}

type fastReflection_SenseMetadata_messageType struct{}

func (x fastReflection_SenseMetadata_messageType) Zero() protoreflect.Message {
	return (*fastReflection_SenseMetadata)(nil)
}
func (x fastReflection_SenseMetadata_messageType) New() protoreflect.Message {
	return new(fastReflection_SenseMetadata)
}
func (x fastReflection_SenseMetadata_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_SenseMetadata
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_SenseMetadata) Descriptor() protoreflect.MessageDescriptor {
	return md_SenseMetadata
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_SenseMetadata) Type() protoreflect.MessageType {
	return _fastReflection_SenseMetadata_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_SenseMetadata) New() protoreflect.Message {
	return new(fastReflection_SenseMetadata)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_SenseMetadata) Interface() protoreflect.ProtoMessage {
	return (*SenseMetadata)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_SenseMetadata) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.DataHash != "" {
		value := protoreflect.ValueOfString(x.DataHash)
		if !f(fd_SenseMetadata_data_hash, value) {
			return
		}
	}
	if x.DdAndFingerprintsIc != uint64(0) {
		value := protoreflect.ValueOfUint64(x.DdAndFingerprintsIc)
		if !f(fd_SenseMetadata_dd_and_fingerprints_ic, value) {
			return
		}
	}
	if x.CollectionId != "" {
		value := protoreflect.ValueOfString(x.CollectionId)
		if !f(fd_SenseMetadata_collection_id, value) {
			return
		}
	}
	if x.GroupId != "" {
		value := protoreflect.ValueOfString(x.GroupId)
		if !f(fd_SenseMetadata_group_id, value) {
			return
		}
	}
	if x.DdAndFingerprintsMax != uint64(0) {
		value := protoreflect.ValueOfUint64(x.DdAndFingerprintsMax)
		if !f(fd_SenseMetadata_dd_and_fingerprints_max, value) {
			return
		}
	}
	if len(x.DdAndFingerprintsIds) != 0 {
		value := protoreflect.ValueOfList(&_SenseMetadata_6_list{list: &x.DdAndFingerprintsIds})
		if !f(fd_SenseMetadata_dd_and_fingerprints_ids, value) {
			return
		}
	}
	if x.Signatures != "" {
		value := protoreflect.ValueOfString(x.Signatures)
		if !f(fd_SenseMetadata_signatures, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_SenseMetadata) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "lumera.action.SenseMetadata.data_hash":
		return x.DataHash != ""
	case "lumera.action.SenseMetadata.dd_and_fingerprints_ic":
		return x.DdAndFingerprintsIc != uint64(0)
	case "lumera.action.SenseMetadata.collection_id":
		return x.CollectionId != ""
	case "lumera.action.SenseMetadata.group_id":
		return x.GroupId != ""
	case "lumera.action.SenseMetadata.dd_and_fingerprints_max":
		return x.DdAndFingerprintsMax != uint64(0)
	case "lumera.action.SenseMetadata.dd_and_fingerprints_ids":
		return len(x.DdAndFingerprintsIds) != 0
	case "lumera.action.SenseMetadata.signatures":
		return x.Signatures != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: lumera.action.SenseMetadata"))
		}
		panic(fmt.Errorf("message lumera.action.SenseMetadata does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SenseMetadata) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "lumera.action.SenseMetadata.data_hash":
		x.DataHash = ""
	case "lumera.action.SenseMetadata.dd_and_fingerprints_ic":
		x.DdAndFingerprintsIc = uint64(0)
	case "lumera.action.SenseMetadata.collection_id":
		x.CollectionId = ""
	case "lumera.action.SenseMetadata.group_id":
		x.GroupId = ""
	case "lumera.action.SenseMetadata.dd_and_fingerprints_max":
		x.DdAndFingerprintsMax = uint64(0)
	case "lumera.action.SenseMetadata.dd_and_fingerprints_ids":
		x.DdAndFingerprintsIds = nil
	case "lumera.action.SenseMetadata.signatures":
		x.Signatures = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: lumera.action.SenseMetadata"))
		}
		panic(fmt.Errorf("message lumera.action.SenseMetadata does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_SenseMetadata) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "lumera.action.SenseMetadata.data_hash":
		value := x.DataHash
		return protoreflect.ValueOfString(value)
	case "lumera.action.SenseMetadata.dd_and_fingerprints_ic":
		value := x.DdAndFingerprintsIc
		return protoreflect.ValueOfUint64(value)
	case "lumera.action.SenseMetadata.collection_id":
		value := x.CollectionId
		return protoreflect.ValueOfString(value)
	case "lumera.action.SenseMetadata.group_id":
		value := x.GroupId
		return protoreflect.ValueOfString(value)
	case "lumera.action.SenseMetadata.dd_and_fingerprints_max":
		value := x.DdAndFingerprintsMax
		return protoreflect.ValueOfUint64(value)
	case "lumera.action.SenseMetadata.dd_and_fingerprints_ids":
		if len(x.DdAndFingerprintsIds) == 0 {
			return protoreflect.ValueOfList(&_SenseMetadata_6_list{})
		}
		listValue := &_SenseMetadata_6_list{list: &x.DdAndFingerprintsIds}
		return protoreflect.ValueOfList(listValue)
	case "lumera.action.SenseMetadata.signatures":
		value := x.Signatures
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: lumera.action.SenseMetadata"))
		}
		panic(fmt.Errorf("message lumera.action.SenseMetadata does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SenseMetadata) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "lumera.action.SenseMetadata.data_hash":
		x.DataHash = value.Interface().(string)
	case "lumera.action.SenseMetadata.dd_and_fingerprints_ic":
		x.DdAndFingerprintsIc = value.Uint()
	case "lumera.action.SenseMetadata.collection_id":
		x.CollectionId = value.Interface().(string)
	case "lumera.action.SenseMetadata.group_id":
		x.GroupId = value.Interface().(string)
	case "lumera.action.SenseMetadata.dd_and_fingerprints_max":
		x.DdAndFingerprintsMax = value.Uint()
	case "lumera.action.SenseMetadata.dd_and_fingerprints_ids":
		lv := value.List()
		clv := lv.(*_SenseMetadata_6_list)
		x.DdAndFingerprintsIds = *clv.list
	case "lumera.action.SenseMetadata.signatures":
		x.Signatures = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: lumera.action.SenseMetadata"))
		}
		panic(fmt.Errorf("message lumera.action.SenseMetadata does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SenseMetadata) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "lumera.action.SenseMetadata.dd_and_fingerprints_ids":
		if x.DdAndFingerprintsIds == nil {
			x.DdAndFingerprintsIds = []string{}
		}
		value := &_SenseMetadata_6_list{list: &x.DdAndFingerprintsIds}
		return protoreflect.ValueOfList(value)
	case "lumera.action.SenseMetadata.data_hash":
		panic(fmt.Errorf("field data_hash of message lumera.action.SenseMetadata is not mutable"))
	case "lumera.action.SenseMetadata.dd_and_fingerprints_ic":
		panic(fmt.Errorf("field dd_and_fingerprints_ic of message lumera.action.SenseMetadata is not mutable"))
	case "lumera.action.SenseMetadata.collection_id":
		panic(fmt.Errorf("field collection_id of message lumera.action.SenseMetadata is not mutable"))
	case "lumera.action.SenseMetadata.group_id":
		panic(fmt.Errorf("field group_id of message lumera.action.SenseMetadata is not mutable"))
	case "lumera.action.SenseMetadata.dd_and_fingerprints_max":
		panic(fmt.Errorf("field dd_and_fingerprints_max of message lumera.action.SenseMetadata is not mutable"))
	case "lumera.action.SenseMetadata.signatures":
		panic(fmt.Errorf("field signatures of message lumera.action.SenseMetadata is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: lumera.action.SenseMetadata"))
		}
		panic(fmt.Errorf("message lumera.action.SenseMetadata does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_SenseMetadata) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "lumera.action.SenseMetadata.data_hash":
		return protoreflect.ValueOfString("")
	case "lumera.action.SenseMetadata.dd_and_fingerprints_ic":
		return protoreflect.ValueOfUint64(uint64(0))
	case "lumera.action.SenseMetadata.collection_id":
		return protoreflect.ValueOfString("")
	case "lumera.action.SenseMetadata.group_id":
		return protoreflect.ValueOfString("")
	case "lumera.action.SenseMetadata.dd_and_fingerprints_max":
		return protoreflect.ValueOfUint64(uint64(0))
	case "lumera.action.SenseMetadata.dd_and_fingerprints_ids":
		list := []string{}
		return protoreflect.ValueOfList(&_SenseMetadata_6_list{list: &list})
	case "lumera.action.SenseMetadata.signatures":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: lumera.action.SenseMetadata"))
		}
		panic(fmt.Errorf("message lumera.action.SenseMetadata does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_SenseMetadata) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in lumera.action.SenseMetadata", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_SenseMetadata) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SenseMetadata) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_SenseMetadata) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_SenseMetadata) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*SenseMetadata)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.DataHash)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.DdAndFingerprintsIc != 0 {
			n += 1 + runtime.Sov(uint64(x.DdAndFingerprintsIc))
		}
		l = len(x.CollectionId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.GroupId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.DdAndFingerprintsMax != 0 {
			n += 1 + runtime.Sov(uint64(x.DdAndFingerprintsMax))
		}
		if len(x.DdAndFingerprintsIds) > 0 {
			for _, s := range x.DdAndFingerprintsIds {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.Signatures)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*SenseMetadata)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Signatures) > 0 {
			i -= len(x.Signatures)
			copy(dAtA[i:], x.Signatures)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Signatures)))
			i--
			dAtA[i] = 0x3a
		}
		if len(x.DdAndFingerprintsIds) > 0 {
			for iNdEx := len(x.DdAndFingerprintsIds) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.DdAndFingerprintsIds[iNdEx])
				copy(dAtA[i:], x.DdAndFingerprintsIds[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.DdAndFingerprintsIds[iNdEx])))
				i--
				dAtA[i] = 0x32
			}
		}
		if x.DdAndFingerprintsMax != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.DdAndFingerprintsMax))
			i--
			dAtA[i] = 0x28
		}
		if len(x.GroupId) > 0 {
			i -= len(x.GroupId)
			copy(dAtA[i:], x.GroupId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.GroupId)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.CollectionId) > 0 {
			i -= len(x.CollectionId)
			copy(dAtA[i:], x.CollectionId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CollectionId)))
			i--
			dAtA[i] = 0x1a
		}
		if x.DdAndFingerprintsIc != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.DdAndFingerprintsIc))
			i--
			dAtA[i] = 0x10
		}
		if len(x.DataHash) > 0 {
			i -= len(x.DataHash)
			copy(dAtA[i:], x.DataHash)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.DataHash)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*SenseMetadata)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SenseMetadata: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SenseMetadata: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DataHash", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DataHash = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DdAndFingerprintsIc", wireType)
				}
				x.DdAndFingerprintsIc = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.DdAndFingerprintsIc |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CollectionId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CollectionId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field GroupId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.GroupId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DdAndFingerprintsMax", wireType)
				}
				x.DdAndFingerprintsMax = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.DdAndFingerprintsMax |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DdAndFingerprintsIds", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DdAndFingerprintsIds = append(x.DdAndFingerprintsIds, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Signatures", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Signatures = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_CascadeMetadata_5_list)(nil)

type _CascadeMetadata_5_list struct {
	list *[]string
}

func (x *_CascadeMetadata_5_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_CascadeMetadata_5_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_CascadeMetadata_5_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_CascadeMetadata_5_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_CascadeMetadata_5_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message CascadeMetadata at list field RqIdsIds as it is not of Message kind"))
}

func (x *_CascadeMetadata_5_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_CascadeMetadata_5_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_CascadeMetadata_5_list) IsValid() bool {
	return x.list != nil
}

var (
	md_CascadeMetadata            protoreflect.MessageDescriptor
	fd_CascadeMetadata_data_hash  protoreflect.FieldDescriptor
	fd_CascadeMetadata_file_name  protoreflect.FieldDescriptor
	fd_CascadeMetadata_rq_ids_ic  protoreflect.FieldDescriptor
	fd_CascadeMetadata_rq_ids_max protoreflect.FieldDescriptor
	fd_CascadeMetadata_rq_ids_ids protoreflect.FieldDescriptor
	fd_CascadeMetadata_signatures protoreflect.FieldDescriptor
	fd_CascadeMetadata_public     protoreflect.FieldDescriptor
)

func init() {
	file_lumera_action_metadata_proto_init()
	md_CascadeMetadata = File_lumera_action_metadata_proto.Messages().ByName("CascadeMetadata")
	fd_CascadeMetadata_data_hash = md_CascadeMetadata.Fields().ByName("data_hash")
	fd_CascadeMetadata_file_name = md_CascadeMetadata.Fields().ByName("file_name")
	fd_CascadeMetadata_rq_ids_ic = md_CascadeMetadata.Fields().ByName("rq_ids_ic")
	fd_CascadeMetadata_rq_ids_max = md_CascadeMetadata.Fields().ByName("rq_ids_max")
	fd_CascadeMetadata_rq_ids_ids = md_CascadeMetadata.Fields().ByName("rq_ids_ids")
	fd_CascadeMetadata_signatures = md_CascadeMetadata.Fields().ByName("signatures")
	fd_CascadeMetadata_public = md_CascadeMetadata.Fields().ByName("public")
}

var _ protoreflect.Message = (*fastReflection_CascadeMetadata)(nil)

type fastReflection_CascadeMetadata CascadeMetadata

func (x *CascadeMetadata) ProtoReflect() protoreflect.Message {
	return (*fastReflection_CascadeMetadata)(x)
}

func (x *CascadeMetadata) slowProtoReflect() protoreflect.Message {
	mi := &file_lumera_action_metadata_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_CascadeMetadata_messageType fastReflection_CascadeMetadata_messageType
var _ protoreflect.MessageType = fastReflection_CascadeMetadata_messageType{}

type fastReflection_CascadeMetadata_messageType struct{}

func (x fastReflection_CascadeMetadata_messageType) Zero() protoreflect.Message {
	return (*fastReflection_CascadeMetadata)(nil)
}
func (x fastReflection_CascadeMetadata_messageType) New() protoreflect.Message {
	return new(fastReflection_CascadeMetadata)
}
func (x fastReflection_CascadeMetadata_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_CascadeMetadata
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_CascadeMetadata) Descriptor() protoreflect.MessageDescriptor {
	return md_CascadeMetadata
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_CascadeMetadata) Type() protoreflect.MessageType {
	return _fastReflection_CascadeMetadata_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_CascadeMetadata) New() protoreflect.Message {
	return new(fastReflection_CascadeMetadata)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_CascadeMetadata) Interface() protoreflect.ProtoMessage {
	return (*CascadeMetadata)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_CascadeMetadata) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.DataHash != "" {
		value := protoreflect.ValueOfString(x.DataHash)
		if !f(fd_CascadeMetadata_data_hash, value) {
			return
		}
	}
	if x.FileName != "" {
		value := protoreflect.ValueOfString(x.FileName)
		if !f(fd_CascadeMetadata_file_name, value) {
			return
		}
	}
	if x.RqIdsIc != uint64(0) {
		value := protoreflect.ValueOfUint64(x.RqIdsIc)
		if !f(fd_CascadeMetadata_rq_ids_ic, value) {
			return
		}
	}
	if x.RqIdsMax != uint64(0) {
		value := protoreflect.ValueOfUint64(x.RqIdsMax)
		if !f(fd_CascadeMetadata_rq_ids_max, value) {
			return
		}
	}
	if len(x.RqIdsIds) != 0 {
		value := protoreflect.ValueOfList(&_CascadeMetadata_5_list{list: &x.RqIdsIds})
		if !f(fd_CascadeMetadata_rq_ids_ids, value) {
			return
		}
	}
	if x.Signatures != "" {
		value := protoreflect.ValueOfString(x.Signatures)
		if !f(fd_CascadeMetadata_signatures, value) {
			return
		}
	}
	if x.Public != false {
		value := protoreflect.ValueOfBool(x.Public)
		if !f(fd_CascadeMetadata_public, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_CascadeMetadata) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "lumera.action.CascadeMetadata.data_hash":
		return x.DataHash != ""
	case "lumera.action.CascadeMetadata.file_name":
		return x.FileName != ""
	case "lumera.action.CascadeMetadata.rq_ids_ic":
		return x.RqIdsIc != uint64(0)
	case "lumera.action.CascadeMetadata.rq_ids_max":
		return x.RqIdsMax != uint64(0)
	case "lumera.action.CascadeMetadata.rq_ids_ids":
		return len(x.RqIdsIds) != 0
	case "lumera.action.CascadeMetadata.signatures":
		return x.Signatures != ""
	case "lumera.action.CascadeMetadata.public":
		return x.Public != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: lumera.action.CascadeMetadata"))
		}
		panic(fmt.Errorf("message lumera.action.CascadeMetadata does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CascadeMetadata) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "lumera.action.CascadeMetadata.data_hash":
		x.DataHash = ""
	case "lumera.action.CascadeMetadata.file_name":
		x.FileName = ""
	case "lumera.action.CascadeMetadata.rq_ids_ic":
		x.RqIdsIc = uint64(0)
	case "lumera.action.CascadeMetadata.rq_ids_max":
		x.RqIdsMax = uint64(0)
	case "lumera.action.CascadeMetadata.rq_ids_ids":
		x.RqIdsIds = nil
	case "lumera.action.CascadeMetadata.signatures":
		x.Signatures = ""
	case "lumera.action.CascadeMetadata.public":
		x.Public = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: lumera.action.CascadeMetadata"))
		}
		panic(fmt.Errorf("message lumera.action.CascadeMetadata does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_CascadeMetadata) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "lumera.action.CascadeMetadata.data_hash":
		value := x.DataHash
		return protoreflect.ValueOfString(value)
	case "lumera.action.CascadeMetadata.file_name":
		value := x.FileName
		return protoreflect.ValueOfString(value)
	case "lumera.action.CascadeMetadata.rq_ids_ic":
		value := x.RqIdsIc
		return protoreflect.ValueOfUint64(value)
	case "lumera.action.CascadeMetadata.rq_ids_max":
		value := x.RqIdsMax
		return protoreflect.ValueOfUint64(value)
	case "lumera.action.CascadeMetadata.rq_ids_ids":
		if len(x.RqIdsIds) == 0 {
			return protoreflect.ValueOfList(&_CascadeMetadata_5_list{})
		}
		listValue := &_CascadeMetadata_5_list{list: &x.RqIdsIds}
		return protoreflect.ValueOfList(listValue)
	case "lumera.action.CascadeMetadata.signatures":
		value := x.Signatures
		return protoreflect.ValueOfString(value)
	case "lumera.action.CascadeMetadata.public":
		value := x.Public
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: lumera.action.CascadeMetadata"))
		}
		panic(fmt.Errorf("message lumera.action.CascadeMetadata does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CascadeMetadata) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "lumera.action.CascadeMetadata.data_hash":
		x.DataHash = value.Interface().(string)
	case "lumera.action.CascadeMetadata.file_name":
		x.FileName = value.Interface().(string)
	case "lumera.action.CascadeMetadata.rq_ids_ic":
		x.RqIdsIc = value.Uint()
	case "lumera.action.CascadeMetadata.rq_ids_max":
		x.RqIdsMax = value.Uint()
	case "lumera.action.CascadeMetadata.rq_ids_ids":
		lv := value.List()
		clv := lv.(*_CascadeMetadata_5_list)
		x.RqIdsIds = *clv.list
	case "lumera.action.CascadeMetadata.signatures":
		x.Signatures = value.Interface().(string)
	case "lumera.action.CascadeMetadata.public":
		x.Public = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: lumera.action.CascadeMetadata"))
		}
		panic(fmt.Errorf("message lumera.action.CascadeMetadata does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CascadeMetadata) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "lumera.action.CascadeMetadata.rq_ids_ids":
		if x.RqIdsIds == nil {
			x.RqIdsIds = []string{}
		}
		value := &_CascadeMetadata_5_list{list: &x.RqIdsIds}
		return protoreflect.ValueOfList(value)
	case "lumera.action.CascadeMetadata.data_hash":
		panic(fmt.Errorf("field data_hash of message lumera.action.CascadeMetadata is not mutable"))
	case "lumera.action.CascadeMetadata.file_name":
		panic(fmt.Errorf("field file_name of message lumera.action.CascadeMetadata is not mutable"))
	case "lumera.action.CascadeMetadata.rq_ids_ic":
		panic(fmt.Errorf("field rq_ids_ic of message lumera.action.CascadeMetadata is not mutable"))
	case "lumera.action.CascadeMetadata.rq_ids_max":
		panic(fmt.Errorf("field rq_ids_max of message lumera.action.CascadeMetadata is not mutable"))
	case "lumera.action.CascadeMetadata.signatures":
		panic(fmt.Errorf("field signatures of message lumera.action.CascadeMetadata is not mutable"))
	case "lumera.action.CascadeMetadata.public":
		panic(fmt.Errorf("field public of message lumera.action.CascadeMetadata is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: lumera.action.CascadeMetadata"))
		}
		panic(fmt.Errorf("message lumera.action.CascadeMetadata does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_CascadeMetadata) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "lumera.action.CascadeMetadata.data_hash":
		return protoreflect.ValueOfString("")
	case "lumera.action.CascadeMetadata.file_name":
		return protoreflect.ValueOfString("")
	case "lumera.action.CascadeMetadata.rq_ids_ic":
		return protoreflect.ValueOfUint64(uint64(0))
	case "lumera.action.CascadeMetadata.rq_ids_max":
		return protoreflect.ValueOfUint64(uint64(0))
	case "lumera.action.CascadeMetadata.rq_ids_ids":
		list := []string{}
		return protoreflect.ValueOfList(&_CascadeMetadata_5_list{list: &list})
	case "lumera.action.CascadeMetadata.signatures":
		return protoreflect.ValueOfString("")
	case "lumera.action.CascadeMetadata.public":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: lumera.action.CascadeMetadata"))
		}
		panic(fmt.Errorf("message lumera.action.CascadeMetadata does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_CascadeMetadata) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in lumera.action.CascadeMetadata", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_CascadeMetadata) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CascadeMetadata) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_CascadeMetadata) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_CascadeMetadata) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*CascadeMetadata)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.DataHash)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.FileName)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.RqIdsIc != 0 {
			n += 1 + runtime.Sov(uint64(x.RqIdsIc))
		}
		if x.RqIdsMax != 0 {
			n += 1 + runtime.Sov(uint64(x.RqIdsMax))
		}
		if len(x.RqIdsIds) > 0 {
			for _, s := range x.RqIdsIds {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.Signatures)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Public {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*CascadeMetadata)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Public {
			i--
			if x.Public {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x38
		}
		if len(x.Signatures) > 0 {
			i -= len(x.Signatures)
			copy(dAtA[i:], x.Signatures)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Signatures)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.RqIdsIds) > 0 {
			for iNdEx := len(x.RqIdsIds) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.RqIdsIds[iNdEx])
				copy(dAtA[i:], x.RqIdsIds[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RqIdsIds[iNdEx])))
				i--
				dAtA[i] = 0x2a
			}
		}
		if x.RqIdsMax != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.RqIdsMax))
			i--
			dAtA[i] = 0x20
		}
		if x.RqIdsIc != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.RqIdsIc))
			i--
			dAtA[i] = 0x18
		}
		if len(x.FileName) > 0 {
			i -= len(x.FileName)
			copy(dAtA[i:], x.FileName)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.FileName)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.DataHash) > 0 {
			i -= len(x.DataHash)
			copy(dAtA[i:], x.DataHash)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.DataHash)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*CascadeMetadata)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: CascadeMetadata: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: CascadeMetadata: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DataHash", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DataHash = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field FileName", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.FileName = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RqIdsIc", wireType)
				}
				x.RqIdsIc = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.RqIdsIc |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RqIdsMax", wireType)
				}
				x.RqIdsMax = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.RqIdsMax |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RqIdsIds", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RqIdsIds = append(x.RqIdsIds, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Signatures", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Signatures = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 7:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Public", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Public = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: lumera/action/metadata.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SenseMetadata contains information for Sense actions.
// This metadata is directly embedded in the Action.metadata field.
// For RequestAction:
//   - Required: data_hash, dd_and_fingerprints_ic
//   - Optional: collection_id, group_id
//
// Keeper will add:
//   - dd_and_fingerprints_max (from module params)
//
// For FinalizeAction:
//   - Required: dd_and_fingerprints_ids, signatures
type SenseMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// RequestAction required fields
	DataHash            string `protobuf:"bytes,1,opt,name=data_hash,proto3" json:"data_hash,omitempty"`
	DdAndFingerprintsIc uint64 `protobuf:"varint,2,opt,name=dd_and_fingerprints_ic,proto3" json:"dd_and_fingerprints_ic,omitempty"`
	// RequestAction optional fields
	CollectionId string `protobuf:"bytes,3,opt,name=collection_id,proto3" json:"collection_id,omitempty"`
	GroupId      string `protobuf:"bytes,4,opt,name=group_id,proto3" json:"group_id,omitempty"`
	// Added by Keeper
	DdAndFingerprintsMax uint64 `protobuf:"varint,5,opt,name=dd_and_fingerprints_max,proto3" json:"dd_and_fingerprints_max,omitempty"`
	// FinalizeAction fields
	DdAndFingerprintsIds []string `protobuf:"bytes,6,rep,name=dd_and_fingerprints_ids,proto3" json:"dd_and_fingerprints_ids,omitempty"`
	Signatures           string   `protobuf:"bytes,7,opt,name=signatures,proto3" json:"signatures,omitempty"`
}

func (x *SenseMetadata) Reset() {
	*x = SenseMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumera_action_metadata_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SenseMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SenseMetadata) ProtoMessage() {}

// Deprecated: Use SenseMetadata.ProtoReflect.Descriptor instead.
func (*SenseMetadata) Descriptor() ([]byte, []int) {
	return file_lumera_action_metadata_proto_rawDescGZIP(), []int{0}
}

func (x *SenseMetadata) GetDataHash() string {
	if x != nil {
		return x.DataHash
	}
	return ""
}

func (x *SenseMetadata) GetDdAndFingerprintsIc() uint64 {
	if x != nil {
		return x.DdAndFingerprintsIc
	}
	return 0
}

func (x *SenseMetadata) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *SenseMetadata) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *SenseMetadata) GetDdAndFingerprintsMax() uint64 {
	if x != nil {
		return x.DdAndFingerprintsMax
	}
	return 0
}

func (x *SenseMetadata) GetDdAndFingerprintsIds() []string {
	if x != nil {
		return x.DdAndFingerprintsIds
	}
	return nil
}

func (x *SenseMetadata) GetSignatures() string {
	if x != nil {
		return x.Signatures
	}
	return ""
}

// CascadeMetadata contains information for Cascade actions.
// This metadata is directly embedded in the Action.metadata field.
// For RequestAction:
//   - Required: data_hash, file_name, rq_ids_ic, signatures
//
// Keeper will add:
//   - rq_ids_max (from module params)
//
// For FinalizeAction:
//   - Required: rq_ids_ids
type CascadeMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// RequestAction required fields
	DataHash string `protobuf:"bytes,1,opt,name=data_hash,proto3" json:"data_hash,omitempty"`
	FileName string `protobuf:"bytes,2,opt,name=file_name,proto3" json:"file_name,omitempty"`
	RqIdsIc  uint64 `protobuf:"varint,3,opt,name=rq_ids_ic,proto3" json:"rq_ids_ic,omitempty"`
	// Added by Keeper
	RqIdsMax uint64 `protobuf:"varint,4,opt,name=rq_ids_max,proto3" json:"rq_ids_max,omitempty"`
	// FinalizeAction fields
	RqIdsIds []string `protobuf:"bytes,5,rep,name=rq_ids_ids,proto3" json:"rq_ids_ids,omitempty"`
	// RequestAction required field
	Signatures string `protobuf:"bytes,6,opt,name=signatures,proto3" json:"signatures,omitempty"`
	Public     bool   `protobuf:"varint,7,opt,name=public,proto3" json:"public,omitempty"`
}

func (x *CascadeMetadata) Reset() {
	*x = CascadeMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lumera_action_metadata_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CascadeMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CascadeMetadata) ProtoMessage() {}

// Deprecated: Use CascadeMetadata.ProtoReflect.Descriptor instead.
func (*CascadeMetadata) Descriptor() ([]byte, []int) {
	return file_lumera_action_metadata_proto_rawDescGZIP(), []int{1}
}

func (x *CascadeMetadata) GetDataHash() string {
	if x != nil {
		return x.DataHash
	}
	return ""
}

func (x *CascadeMetadata) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *CascadeMetadata) GetRqIdsIc() uint64 {
	if x != nil {
		return x.RqIdsIc
	}
	return 0
}

func (x *CascadeMetadata) GetRqIdsMax() uint64 {
	if x != nil {
		return x.RqIdsMax
	}
	return 0
}

func (x *CascadeMetadata) GetRqIdsIds() []string {
	if x != nil {
		return x.RqIdsIds
	}
	return nil
}

func (x *CascadeMetadata) GetSignatures() string {
	if x != nil {
		return x.Signatures
	}
	return ""
}

func (x *CascadeMetadata) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

var File_lumera_action_metadata_proto protoreflect.FileDescriptor

var file_lumera_action_metadata_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x6c, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d,
	0x6c, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x14, 0x67,
	0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x6c, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x2f, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbb, 0x02, 0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x12, 0x36, 0x0a, 0x16, 0x64, 0x64, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x66,
	0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x73, 0x5f, 0x69, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x16, 0x64, 0x64, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x66, 0x69, 0x6e,
	0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x73, 0x5f, 0x69, 0x63, 0x12, 0x24, 0x0a, 0x0d,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x12, 0x38,
	0x0a, 0x17, 0x64, 0x64, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70,
	0x72, 0x69, 0x6e, 0x74, 0x73, 0x5f, 0x6d, 0x61, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x17, 0x64, 0x64, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72,
	0x69, 0x6e, 0x74, 0x73, 0x5f, 0x6d, 0x61, 0x78, 0x12, 0x38, 0x0a, 0x17, 0x64, 0x64, 0x5f, 0x61,
	0x6e, 0x64, 0x5f, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x73, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x17, 0x64, 0x64, 0x5f, 0x61, 0x6e,
	0x64, 0x5f, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x73, 0x5f, 0x69,
	0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x73, 0x22, 0xe9, 0x01, 0x0a, 0x0f, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x71, 0x5f, 0x69, 0x64, 0x73, 0x5f, 0x69, 0x63, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x72, 0x71, 0x5f, 0x69, 0x64, 0x73, 0x5f, 0x69, 0x63,
	0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x71, 0x5f, 0x69, 0x64, 0x73, 0x5f, 0x6d, 0x61, 0x78, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x72, 0x71, 0x5f, 0x69, 0x64, 0x73, 0x5f, 0x6d, 0x61, 0x78,
	0x12, 0x24, 0x0a, 0x0a, 0x72, 0x71, 0x5f, 0x69, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x09, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x01, 0x52, 0x0a, 0x72, 0x71, 0x5f, 0x69,
	0x64, 0x73, 0x5f, 0x69, 0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x42, 0xab,
	0x01, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x6c, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x2e, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x4c, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2f, 0x6c, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x75, 0x6d, 0x65,
	0x72, 0x61, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0xa2, 0x02, 0x03, 0x4c, 0x41, 0x58, 0xaa,
	0x02, 0x0d, 0x4c, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0xca,
	0x02, 0x0d, 0x4c, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x5c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0xe2,
	0x02, 0x19, 0x4c, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x5c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0e, 0x4c, 0x75,
	0x6d, 0x65, 0x72, 0x61, 0x3a, 0x3a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_lumera_action_metadata_proto_rawDescOnce sync.Once
	file_lumera_action_metadata_proto_rawDescData = file_lumera_action_metadata_proto_rawDesc
)

func file_lumera_action_metadata_proto_rawDescGZIP() []byte {
	file_lumera_action_metadata_proto_rawDescOnce.Do(func() {
		file_lumera_action_metadata_proto_rawDescData = protoimpl.X.CompressGZIP(file_lumera_action_metadata_proto_rawDescData)
	})
	return file_lumera_action_metadata_proto_rawDescData
}

var file_lumera_action_metadata_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_lumera_action_metadata_proto_goTypes = []interface{}{
	(*SenseMetadata)(nil),   // 0: lumera.action.SenseMetadata
	(*CascadeMetadata)(nil), // 1: lumera.action.CascadeMetadata
}
var file_lumera_action_metadata_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_lumera_action_metadata_proto_init() }
func file_lumera_action_metadata_proto_init() {
	if File_lumera_action_metadata_proto != nil {
		return
	}
	file_lumera_action_action_type_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_lumera_action_metadata_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SenseMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lumera_action_metadata_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CascadeMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lumera_action_metadata_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_lumera_action_metadata_proto_goTypes,
		DependencyIndexes: file_lumera_action_metadata_proto_depIdxs,
		MessageInfos:      file_lumera_action_metadata_proto_msgTypes,
	}.Build()
	File_lumera_action_metadata_proto = out.File
	file_lumera_action_metadata_proto_rawDesc = nil
	file_lumera_action_metadata_proto_goTypes = nil
	file_lumera_action_metadata_proto_depIdxs = nil
}
