{"id":"github.com/LumeraProtocol/lumera","consumes":["application/json"],"produces":["application/json"],"swagger":"2.0","info":{"description":"Chain github.com/LumeraProtocol/lumera REST API","title":"HTTP API Console","contact":{"name":"github.com/LumeraProtocol/lumera"},"version":"version not set"},"paths":{"/LumeraProtocol/lumera/action/v1/get_action/{actionID}":{"get":{"tags":["Query"],"summary":"GetAction queries a single action by ID.","operationId":"GithubComLumeraProtocollumeraQuery_GetAction","parameters":[{"type":"string","description":"The ID of the action to query","name":"actionID","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/lumera.action.v1.QueryGetActionResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/LumeraProtocol/lumera/action/v1/get_action_fee/{dataSize}":{"get":{"tags":["Query"],"summary":"Queries a list of GetActionFee items.","operationId":"GithubComLumeraProtocollumeraQuery_GetActionFee","parameters":[{"type":"string","name":"dataSize","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/lumera.action.v1.QueryGetActionFeeResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/LumeraProtocol/lumera/action/v1/list_actions":{"get":{"tags":["Query"],"summary":"List actions with optional type and state filters.","operationId":"GithubComLumeraProtocollumeraQuery_ListActions","parameters":[{"enum":["ACTION_TYPE_UNSPECIFIED","ACTION_TYPE_SENSE","ACTION_TYPE_CASCADE"],"type":"string","default":"ACTION_TYPE_UNSPECIFIED","description":" - ACTION_TYPE_UNSPECIFIED: The default action type, used when the type is not specified.\n - ACTION_TYPE_SENSE: The action type for sense operations.\n - ACTION_TYPE_CASCADE: The action type for cascade operations.","name":"actionType","in":"query"},{"enum":["ACTION_STATE_UNSPECIFIED","ACTION_STATE_PENDING","ACTION_STATE_PROCESSING","ACTION_STATE_DONE","ACTION_STATE_APPROVED","ACTION_STATE_REJECTED","ACTION_STATE_FAILED","ACTION_STATE_EXPIRED"],"type":"string","default":"ACTION_STATE_UNSPECIFIED","description":" - ACTION_STATE_UNSPECIFIED: The default state, used when the state is not specified.\n - ACTION_STATE_PENDING: The action is pending and has not yet been processed.\n - ACTION_STATE_PROCESSING: The action is currently being processed.\n - ACTION_STATE_DONE: The action has been completed successfully.\n - ACTION_STATE_APPROVED: The action has been approved.\n - ACTION_STATE_REJECTED: The action has been rejected.\n - ACTION_STATE_FAILED: The action has failed.\n - ACTION_STATE_EXPIRED: The action has expired and is no longer valid.","name":"actionState","in":"query"},{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/lumera.action.v1.QueryListActionsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/LumeraProtocol/lumera/action/v1/list_actions_by_block_height/{blockHeight}":{"get":{"tags":["Query"],"summary":"List actions created at a specific block height.","operationId":"GithubComLumeraProtocollumeraQuery_ListActionsByBlockHeight","parameters":[{"type":"string","format":"int64","name":"blockHeight","in":"path","required":true},{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/lumera.action.v1.QueryListActionsByBlockHeightResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/LumeraProtocol/lumera/action/v1/list_actions_by_supernode/{superNodeAddress}":{"get":{"tags":["Query"],"summary":"List actions for a specific supernode.","operationId":"GithubComLumeraProtocollumeraQuery_ListActionsBySuperNode","parameters":[{"type":"string","name":"superNodeAddress","in":"path","required":true},{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/lumera.action.v1.QueryListActionsBySuperNodeResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/LumeraProtocol/lumera/action/v1/list_expired_actions":{"get":{"tags":["Query"],"summary":"List expired actions.","operationId":"GithubComLumeraProtocollumeraQuery_ListExpiredActions","parameters":[{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/lumera.action.v1.QueryListExpiredActionsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/LumeraProtocol/lumera/action/v1/params":{"get":{"tags":["Query"],"summary":"Parameters queries the parameters of the module.","operationId":"GithubComLumeraProtocollumeraQuery_Params","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/lumera.action.v1.QueryParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/LumeraProtocol/lumera/action/v1/query_action_by_metadata":{"get":{"tags":["Query"],"summary":"Query actions based on metadata.","operationId":"GithubComLumeraProtocollumeraQuery_QueryActionByMetadata","parameters":[{"enum":["ACTION_TYPE_UNSPECIFIED","ACTION_TYPE_SENSE","ACTION_TYPE_CASCADE"],"type":"string","default":"ACTION_TYPE_UNSPECIFIED","description":" - ACTION_TYPE_UNSPECIFIED: The default action type, used when the type is not specified.\n - ACTION_TYPE_SENSE: The action type for sense operations.\n - ACTION_TYPE_CASCADE: The action type for cascade operations.","name":"actionType","in":"query"},{"type":"string","description":"e.g., \"field=value\"","name":"metadataQuery","in":"query"},{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/lumera.action.v1.QueryActionByMetadataResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/LumeraProtocol/lumera/claim/claim_record/{address}":{"get":{"tags":["Query"],"summary":"Queries a list of ClaimRecord items.","operationId":"GithubComLumeraProtocollumeraQuery_ClaimRecord","parameters":[{"type":"string","name":"address","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/lumera.claim.QueryClaimRecordResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/LumeraProtocol/lumera/claim/list_claimed/{vestedTerm}":{"get":{"tags":["Query"],"summary":"Queries a list of ListClaimed items.","operationId":"GithubComLumeraProtocollumeraQuery_ListClaimed","parameters":[{"type":"integer","format":"int64","name":"vestedTerm","in":"path","required":true},{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/lumera.claim.QueryListClaimedResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/LumeraProtocol/lumera/claim/params":{"get":{"tags":["Query"],"summary":"Parameters queries the parameters of the module.","operationId":"GithubComLumeraProtocollumeraQuery_ParamsMixin11","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/lumera.claim.QueryParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/LumeraProtocol/lumera/lumeraid/params":{"get":{"tags":["Query"],"summary":"Parameters queries the parameters of the module.","operationId":"GithubComLumeraProtocollumeraQuery_ParamsMixin16","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/lumera.lumeraid.QueryParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/LumeraProtocol/lumera/supernode/v1/get_super_node/{validatorAddress}":{"get":{"tags":["Query"],"summary":"Queries a SuperNode by validatorAddress.","operationId":"GithubComLumeraProtocollumeraQuery_GetSuperNode","parameters":[{"type":"string","name":"validatorAddress","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/lumera.supernode.v1.QueryGetSuperNodeResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/LumeraProtocol/lumera/supernode/v1/get_super_node_by_address/{supernodeAddress}":{"get":{"tags":["Query"],"summary":"Queries a SuperNode by supernodeAddress.","operationId":"GithubComLumeraProtocollumeraQuery_GetSuperNodeBySuperNodeAddress","parameters":[{"type":"string","name":"supernodeAddress","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/lumera.supernode.v1.QueryGetSuperNodeBySuperNodeAddressResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/LumeraProtocol/lumera/supernode/v1/get_top_super_nodes_for_block/{blockHeight}":{"get":{"tags":["Query"],"summary":"Queries a list of GetTopSuperNodesForBlock items.","operationId":"GithubComLumeraProtocollumeraQuery_GetTopSuperNodesForBlock","parameters":[{"type":"integer","format":"int32","name":"blockHeight","in":"path","required":true},{"type":"integer","format":"int32","name":"limit","in":"query"},{"type":"string","name":"state","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/lumera.supernode.v1.QueryGetTopSuperNodesForBlockResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/LumeraProtocol/lumera/supernode/v1/list_super_nodes":{"get":{"tags":["Query"],"summary":"Queries a list of SuperNodes.","operationId":"GithubComLumeraProtocollumeraQuery_ListSuperNodes","parameters":[{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/lumera.supernode.v1.QueryListSuperNodesResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/LumeraProtocol/lumera/supernode/v1/params":{"get":{"tags":["Query"],"summary":"Parameters queries the parameters of the module.","operationId":"GithubComLumeraProtocollumeraQuery_ParamsMixin23","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/lumera.supernode.v1.QueryParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/lumera.action.v1.Msg/ApproveAction":{"post":{"tags":["Msg"],"summary":"ApproveAction defines a message for approving an action.","operationId":"GithubComLumeraProtocollumeraMsg_ApproveAction","parameters":[{"description":"MsgApproveAction is the Msg/ApproveAction request type.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/lumera.action.v1.MsgApproveAction"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/lumera.action.v1.MsgApproveActionResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/lumera.action.v1.Msg/FinalizeAction":{"post":{"tags":["Msg"],"summary":"FinalizeAction defines a message for finalizing an action.","operationId":"GithubComLumeraProtocollumeraMsg_FinalizeAction","parameters":[{"description":"MsgFinalizeAction is the Msg/FinalizeAction request type.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/lumera.action.v1.MsgFinalizeAction"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/lumera.action.v1.MsgFinalizeActionResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/lumera.action.v1.Msg/RequestAction":{"post":{"tags":["Msg"],"summary":"RequestAction defines a message for requesting an action.","operationId":"GithubComLumeraProtocollumeraMsg_RequestAction","parameters":[{"description":"MsgRequestAction is the Msg/RequestAction request type.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/lumera.action.v1.MsgRequestAction"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/lumera.action.v1.MsgRequestActionResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/lumera.action.v1.Msg/UpdateParams":{"post":{"tags":["Msg"],"summary":"UpdateParams defines a (governance) operation for updating the module\nparameters. The authority defaults to the x/gov module account.","operationId":"GithubComLumeraProtocollumeraMsg_UpdateParams","parameters":[{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/lumera.action.v1.MsgUpdateParams"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/lumera.action.v1.MsgUpdateParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/lumera.claim.Msg/Claim":{"post":{"tags":["Msg"],"summary":"Claim defines a message for claiming tokens.","operationId":"GithubComLumeraProtocollumeraMsg_Claim","parameters":[{"description":"MsgClaim is the Msg/Claim request type.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/lumera.claim.MsgClaim"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/lumera.claim.MsgClaimResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/lumera.claim.Msg/DelayedClaim":{"post":{"tags":["Msg"],"operationId":"GithubComLumeraProtocollumeraMsg_DelayedClaim","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/lumera.claim.MsgDelayedClaim"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/lumera.claim.MsgDelayedClaimResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/lumera.claim.Msg/UpdateParams":{"post":{"tags":["Msg"],"summary":"UpdateParams defines a (governance) operation for updating the module\nparameters. The authority defaults to the x/gov module account.","operationId":"GithubComLumeraProtocollumeraMsg_UpdateParamsMixin12","parameters":[{"description":"MsgUpdateParams is the Msg/UpdateParams request type.\nMsgUpdateParams is the Msg/UpdateParams request type.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/lumera.claim.MsgUpdateParams"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/lumera.claim.MsgUpdateParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/lumera.lumeraid.Msg/UpdateParams":{"post":{"tags":["Msg"],"summary":"UpdateParams defines a (governance) operation for updating the module\nparameters. The authority defaults to the x/gov module account.","operationId":"GithubComLumeraProtocollumeraMsg_UpdateParamsMixin17","parameters":[{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/lumera.lumeraid.MsgUpdateParams"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/lumera.lumeraid.MsgUpdateParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/lumera.supernode.v1.Msg/DeregisterSupernode":{"post":{"tags":["Msg"],"operationId":"GithubComLumeraProtocollumeraMsg_DeregisterSupernode","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/lumera.supernode.v1.MsgDeregisterSupernode"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/lumera.supernode.v1.MsgDeregisterSupernodeResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/lumera.supernode.v1.Msg/RegisterSupernode":{"post":{"tags":["Msg"],"operationId":"GithubComLumeraProtocollumeraMsg_RegisterSupernode","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/lumera.supernode.v1.MsgRegisterSupernode"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/lumera.supernode.v1.MsgRegisterSupernodeResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/lumera.supernode.v1.Msg/StartSupernode":{"post":{"tags":["Msg"],"operationId":"GithubComLumeraProtocollumeraMsg_StartSupernode","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/lumera.supernode.v1.MsgStartSupernode"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/lumera.supernode.v1.MsgStartSupernodeResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/lumera.supernode.v1.Msg/StopSupernode":{"post":{"tags":["Msg"],"operationId":"GithubComLumeraProtocollumeraMsg_StopSupernode","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/lumera.supernode.v1.MsgStopSupernode"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/lumera.supernode.v1.MsgStopSupernodeResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/lumera.supernode.v1.Msg/UpdateParams":{"post":{"tags":["Msg"],"summary":"UpdateParams defines a (governance) operation for updating the module\nparameters. The authority defaults to the x/gov module account.","operationId":"GithubComLumeraProtocollumeraMsg_UpdateParamsMixin27","parameters":[{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/lumera.supernode.v1.MsgUpdateParams"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/lumera.supernode.v1.MsgUpdateParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/lumera.supernode.v1.Msg/UpdateSupernode":{"post":{"tags":["Msg"],"operationId":"GithubComLumeraProtocollumeraMsg_UpdateSupernode","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/lumera.supernode.v1.MsgUpdateSupernode"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/lumera.supernode.v1.MsgUpdateSupernodeResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}}},"definitions":{"cosmos.base.query.v1beta1.PageRequest":{"description":"message SomeRequest {\n         Foo some_parameter = 1;\n         PageRequest pagination = 2;\n }","type":"object","title":"PageRequest is to be embedded in gRPC request messages for efficient\npagination. Ex:","properties":{"count_total":{"description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","type":"boolean"},"key":{"description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","type":"string","format":"byte"},"limit":{"description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","type":"string","format":"uint64"},"offset":{"description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","type":"string","format":"uint64"},"reverse":{"description":"reverse is set to true if results are to be returned in the descending order.","type":"boolean"}}},"cosmos.base.query.v1beta1.PageResponse":{"description":"PageResponse is to be embedded in gRPC response messages where the\ncorresponding request message has used PageRequest.\n\n message SomeResponse {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n }","type":"object","properties":{"next_key":{"description":"next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently. It will be empty if\nthere are no more results.","type":"string","format":"byte"},"total":{"type":"string","format":"uint64","title":"total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise"}}},"cosmos.base.v1beta1.Coin":{"description":"Coin defines a token with a denomination and an amount.\n\nNOTE: The amount field is an Int which implements the custom method\nsignatures required by gogoproto.","type":"object","properties":{"amount":{"type":"string"},"denom":{"type":"string"}}},"google.protobuf.Any":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}},"google.rpc.Status":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"details":{"type":"array","items":{"type":"object","$ref":"#/definitions/google.protobuf.Any"}},"message":{"type":"string"}}},"lumera.action.v1.Action":{"description":"Action represents a specific action within the Lumera protocol.","type":"object","properties":{"actionID":{"type":"string"},"actionType":{"$ref":"#/definitions/lumera.action.v1.ActionType"},"blockHeight":{"type":"string","format":"int64"},"creator":{"type":"string"},"expirationTime":{"type":"string","format":"int64"},"metadata":{"type":"string","format":"byte"},"price":{"type":"string"},"state":{"$ref":"#/definitions/lumera.action.v1.ActionState"},"superNodes":{"type":"array","items":{"type":"string"}}}},"lumera.action.v1.ActionState":{"description":"ActionState enum represents the various states an action can be in.\n\n - ACTION_STATE_UNSPECIFIED: The default state, used when the state is not specified.\n - ACTION_STATE_PENDING: The action is pending and has not yet been processed.\n - ACTION_STATE_PROCESSING: The action is currently being processed.\n - ACTION_STATE_DONE: The action has been completed successfully.\n - ACTION_STATE_APPROVED: The action has been approved.\n - ACTION_STATE_REJECTED: The action has been rejected.\n - ACTION_STATE_FAILED: The action has failed.\n - ACTION_STATE_EXPIRED: The action has expired and is no longer valid.","type":"string","default":"ACTION_STATE_UNSPECIFIED","enum":["ACTION_STATE_UNSPECIFIED","ACTION_STATE_PENDING","ACTION_STATE_PROCESSING","ACTION_STATE_DONE","ACTION_STATE_APPROVED","ACTION_STATE_REJECTED","ACTION_STATE_FAILED","ACTION_STATE_EXPIRED"]},"lumera.action.v1.ActionType":{"description":"ActionType enum represents the various types of actions that can be performed.\n\n - ACTION_TYPE_UNSPECIFIED: The default action type, used when the type is not specified.\n - ACTION_TYPE_SENSE: The action type for sense operations.\n - ACTION_TYPE_CASCADE: The action type for cascade operations.","type":"string","default":"ACTION_TYPE_UNSPECIFIED","enum":["ACTION_TYPE_UNSPECIFIED","ACTION_TYPE_SENSE","ACTION_TYPE_CASCADE"]},"lumera.action.v1.MsgApproveAction":{"description":"MsgApproveAction is the Msg/ApproveAction request type.","type":"object","properties":{"actionId":{"type":"string"},"creator":{"type":"string"}}},"lumera.action.v1.MsgApproveActionResponse":{"type":"object","title":"MsgApproveActionResponse defines the response structure for executing a MsgApproveAction"},"lumera.action.v1.MsgFinalizeAction":{"description":"MsgFinalizeAction is the Msg/FinalizeAction request type.","type":"object","properties":{"actionId":{"type":"string"},"actionType":{"type":"string"},"creator":{"type":"string","title":"must be supernode address"},"metadata":{"type":"string"}}},"lumera.action.v1.MsgFinalizeActionResponse":{"type":"object","title":"MsgFinalizeActionResponse defines the response structure for executing a MsgFinalizeAction"},"lumera.action.v1.MsgRequestAction":{"description":"MsgRequestAction is the Msg/RequestAction request type.","type":"object","properties":{"actionType":{"type":"string"},"creator":{"type":"string"},"expirationTime":{"type":"string"},"metadata":{"type":"string"},"price":{"type":"string"}}},"lumera.action.v1.MsgRequestActionResponse":{"type":"object","title":"MsgRequestActionResponse defines the response structure for executing a MsgRequestAction","properties":{"actionId":{"type":"string"},"status":{"type":"string"}}},"lumera.action.v1.MsgUpdateParams":{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","type":"object","properties":{"authority":{"description":"authority is the address that controls the module (defaults to x/gov unless overwritten).","type":"string"},"params":{"description":"NOTE: All parameters must be supplied.","$ref":"#/definitions/lumera.action.v1.Params"}}},"lumera.action.v1.MsgUpdateParamsResponse":{"description":"MsgUpdateParamsResponse defines the response structure for executing a\nMsgUpdateParams message.","type":"object"},"lumera.action.v1.Params":{"description":"Params defines the parameters for the module.","type":"object","properties":{"base_action_fee":{"title":"Fees","$ref":"#/definitions/cosmos.base.v1beta1.Coin"},"expiration_duration":{"type":"string","title":"Time Constraints"},"fee_per_kbyte":{"$ref":"#/definitions/cosmos.base.v1beta1.Coin"},"foundation_fee_share":{"type":"string"},"max_actions_per_block":{"type":"string","format":"uint64","title":"Limits"},"max_dd_and_fingerprints":{"type":"string","format":"uint64"},"max_processing_time":{"type":"string"},"max_raptor_q_symbols":{"type":"string","format":"uint64"},"min_processing_time":{"type":"string"},"min_super_nodes":{"type":"string","format":"uint64"},"super_node_fee_share":{"type":"string","title":"Reward Distribution"}}},"lumera.action.v1.QueryActionByMetadataResponse":{"type":"object","title":"QueryActionByMetadataResponse is a response type to query actions by metadata","properties":{"actions":{"type":"array","items":{"type":"object","$ref":"#/definitions/lumera.action.v1.Action"}},"pagination":{"$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"},"total":{"type":"string","format":"uint64"}}},"lumera.action.v1.QueryGetActionFeeResponse":{"type":"object","title":"QueryGetActionFeeResponse is a response type to get action fee","properties":{"amount":{"type":"string"}}},"lumera.action.v1.QueryGetActionResponse":{"type":"object","title":"Response type for GetAction","properties":{"action":{"$ref":"#/definitions/lumera.action.v1.Action"}}},"lumera.action.v1.QueryListActionsByBlockHeightResponse":{"type":"object","title":"QueryListActionsByBlockHeightResponse is a response type to list actions by block height","properties":{"actions":{"type":"array","items":{"type":"object","$ref":"#/definitions/lumera.action.v1.Action"}},"pagination":{"$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"},"total":{"type":"string","format":"uint64"}}},"lumera.action.v1.QueryListActionsBySuperNodeResponse":{"type":"object","title":"QueryListActionsBySuperNodeResponse is a response type to list actions for a specific supernode","properties":{"actions":{"type":"array","items":{"type":"object","$ref":"#/definitions/lumera.action.v1.Action"}},"pagination":{"$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"},"total":{"type":"string","format":"uint64"}}},"lumera.action.v1.QueryListActionsResponse":{"type":"object","title":"QueryListActionsResponse is a response type to list actions","properties":{"actions":{"type":"array","items":{"type":"object","$ref":"#/definitions/lumera.action.v1.Action"}},"pagination":{"$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"},"total":{"type":"string","format":"uint64"}}},"lumera.action.v1.QueryListExpiredActionsResponse":{"type":"object","title":"QueryListExpiredActionsResponse is a response type to list expired actions","properties":{"actions":{"type":"array","items":{"type":"object","$ref":"#/definitions/lumera.action.v1.Action"}},"pagination":{"$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"},"total":{"type":"string","format":"uint64"}}},"lumera.action.v1.QueryParamsResponse":{"description":"QueryParamsResponse is response type for the Query/Params RPC method.","type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","$ref":"#/definitions/lumera.action.v1.Params"}}},"lumera.claim.ClaimRecord":{"description":"ClaimRecord represents a record of a claim made by a user.","type":"object","properties":{"balance":{"type":"array","items":{"type":"object","$ref":"#/definitions/cosmos.base.v1beta1.Coin"}},"claimTime":{"type":"string","format":"int64"},"claimed":{"type":"boolean"},"destAddress":{"type":"string"},"oldAddress":{"type":"string"},"vestedTier":{"type":"integer","format":"int64"}}},"lumera.claim.MsgClaim":{"description":"MsgClaim is the Msg/Claim request type.","type":"object","properties":{"creator":{"type":"string"},"newAddress":{"type":"string"},"oldAddress":{"type":"string"},"pubKey":{"type":"string"},"signature":{"type":"string"}}},"lumera.claim.MsgClaimResponse":{"type":"object","title":"MsgClaimResponse defines the response structure for executing a"},"lumera.claim.MsgDelayedClaim":{"type":"object","properties":{"creator":{"type":"string"},"newAddress":{"type":"string"},"oldAddress":{"type":"string"},"pubKey":{"type":"string"},"signature":{"type":"string"},"tier":{"type":"integer","format":"int64"}}},"lumera.claim.MsgDelayedClaimResponse":{"type":"object"},"lumera.claim.MsgUpdateParams":{"description":"MsgUpdateParams is the Msg/UpdateParams request type.\nMsgUpdateParams is the Msg/UpdateParams request type.","type":"object","properties":{"authority":{"description":"authority is the address that controls the module (defaults to x/gov unless overwritten).","type":"string"},"params":{"description":"params defines the x/claim parameters to update.\nNOTE: All parameters must be supplied.","$ref":"#/definitions/lumera.claim.Params"}}},"lumera.claim.MsgUpdateParamsResponse":{"description":"MsgUpdateParamsResponse defines the response structure for executing a\nMsgUpdateParams message.","type":"object"},"lumera.claim.Params":{"description":"Params defines the parameters for the module.","type":"object","properties":{"claim_end_time":{"type":"string","format":"int64"},"enable_claims":{"type":"boolean"},"max_claims_per_block":{"type":"string","format":"uint64"}}},"lumera.claim.QueryClaimRecordResponse":{"description":"QueryClaimRecordResponse is response type for the Query/ClaimRecord RPC method.","type":"object","properties":{"record":{"$ref":"#/definitions/lumera.claim.ClaimRecord"}}},"lumera.claim.QueryListClaimedResponse":{"type":"object","properties":{"claims":{"type":"array","items":{"type":"object","$ref":"#/definitions/lumera.claim.ClaimRecord"}},"pagination":{"$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"}}},"lumera.claim.QueryParamsResponse":{"description":"QueryParamsResponse is response type for the Query/Params RPC method.","type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","$ref":"#/definitions/lumera.claim.Params"}}},"lumera.lumeraid.MsgUpdateParams":{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","type":"object","properties":{"authority":{"description":"authority is the address that controls the module (defaults to x/gov unless overwritten).","type":"string"},"params":{"description":"NOTE: All parameters must be supplied.","$ref":"#/definitions/lumera.lumeraid.Params"}}},"lumera.lumeraid.MsgUpdateParamsResponse":{"description":"MsgUpdateParamsResponse defines the response structure for executing a\nMsgUpdateParams message.","type":"object"},"lumera.lumeraid.Params":{"description":"Params defines the parameters for the module.","type":"object"},"lumera.lumeraid.QueryParamsResponse":{"description":"QueryParamsResponse is response type for the Query/Params RPC method.","type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","$ref":"#/definitions/lumera.lumeraid.Params"}}},"lumera.supernode.v1.Evidence":{"description":"Evidence defines the evidence structure for the supernode module.","type":"object","properties":{"action_id":{"type":"string"},"description":{"type":"string"},"evidence_type":{"type":"string"},"height":{"type":"integer","format":"int32"},"reporter_address":{"type":"string"},"severity":{"type":"string","format":"uint64"},"validator_address":{"type":"string"}}},"lumera.supernode.v1.IPAddressHistory":{"type":"object","properties":{"address":{"type":"string"},"height":{"type":"string","format":"int64"}}},"lumera.supernode.v1.MetricsAggregate":{"type":"object","properties":{"height":{"type":"string","format":"int64"},"metrics":{"type":"object","additionalProperties":{"type":"number","format":"double"}},"report_count":{"type":"string","format":"uint64"}}},"lumera.supernode.v1.MsgDeregisterSupernode":{"type":"object","properties":{"creator":{"type":"string"},"validatorAddress":{"type":"string"}}},"lumera.supernode.v1.MsgDeregisterSupernodeResponse":{"type":"object"},"lumera.supernode.v1.MsgRegisterSupernode":{"type":"object","properties":{"creator":{"type":"string"},"ipAddress":{"type":"string"},"p2p_port":{"type":"string"},"supernodeAccount":{"type":"string"},"validatorAddress":{"type":"string"}}},"lumera.supernode.v1.MsgRegisterSupernodeResponse":{"type":"object"},"lumera.supernode.v1.MsgStartSupernode":{"type":"object","properties":{"creator":{"type":"string"},"validatorAddress":{"type":"string"}}},"lumera.supernode.v1.MsgStartSupernodeResponse":{"type":"object"},"lumera.supernode.v1.MsgStopSupernode":{"type":"object","properties":{"creator":{"type":"string"},"reason":{"type":"string"},"validatorAddress":{"type":"string"}}},"lumera.supernode.v1.MsgStopSupernodeResponse":{"type":"object"},"lumera.supernode.v1.MsgUpdateParams":{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","type":"object","properties":{"authority":{"description":"authority is the address that controls the module (defaults to x/gov unless overwritten).","type":"string"},"params":{"description":"NOTE: All parameters must be supplied.","$ref":"#/definitions/lumera.supernode.v1.Params"}}},"lumera.supernode.v1.MsgUpdateParamsResponse":{"description":"MsgUpdateParamsResponse defines the response structure for executing a\nMsgUpdateParams message.","type":"object"},"lumera.supernode.v1.MsgUpdateSupernode":{"type":"object","properties":{"creator":{"type":"string"},"ipAddress":{"type":"string"},"note":{"type":"string"},"p2p_port":{"type":"string"},"supernodeAccount":{"type":"string"},"validatorAddress":{"type":"string"}}},"lumera.supernode.v1.MsgUpdateSupernodeResponse":{"type":"object"},"lumera.supernode.v1.Params":{"description":"Params defines the parameters for the module.","type":"object","properties":{"evidence_retention_period":{"type":"string"},"inactivity_penalty_period":{"type":"string"},"metrics_thresholds":{"type":"string"},"minimum_stake_for_sn":{"$ref":"#/definitions/cosmos.base.v1beta1.Coin"},"reporting_threshold":{"type":"string","format":"uint64"},"slashing_fraction":{"type":"string"},"slashing_threshold":{"type":"string","format":"uint64"}}},"lumera.supernode.v1.QueryGetSuperNodeBySuperNodeAddressResponse":{"description":"QueryGetSuperNodeBySuperNodeAddressResponse is response type for the Query/GetSuperNodeBySuperNodeAddress RPC method.","type":"object","properties":{"supernode":{"$ref":"#/definitions/lumera.supernode.v1.SuperNode"}}},"lumera.supernode.v1.QueryGetSuperNodeResponse":{"description":"QueryGetSuperNodeResponse is response type for the Query/GetSuperNode RPC method.","type":"object","properties":{"supernode":{"$ref":"#/definitions/lumera.supernode.v1.SuperNode"}}},"lumera.supernode.v1.QueryGetTopSuperNodesForBlockResponse":{"description":"QueryGetTopSuperNodesForBlockResponse is response type for the Query/GetTopSuperNodesForBlock RPC method.","type":"object","properties":{"supernodes":{"type":"array","items":{"type":"object","$ref":"#/definitions/lumera.supernode.v1.SuperNode"}}}},"lumera.supernode.v1.QueryListSuperNodesResponse":{"description":"QueryListSuperNodesResponse is response type for the Query/ListSuperNodes RPC method.","type":"object","properties":{"pagination":{"$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"},"supernodes":{"type":"array","items":{"type":"object","$ref":"#/definitions/lumera.supernode.v1.SuperNode"}}}},"lumera.supernode.v1.QueryParamsResponse":{"description":"QueryParamsResponse is response type for the Query/Params RPC method.","type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","$ref":"#/definitions/lumera.supernode.v1.Params"}}},"lumera.supernode.v1.SuperNode":{"type":"object","properties":{"evidence":{"type":"array","items":{"type":"object","$ref":"#/definitions/lumera.supernode.v1.Evidence"}},"metrics":{"$ref":"#/definitions/lumera.supernode.v1.MetricsAggregate"},"note":{"type":"string"},"p2p_port":{"type":"string"},"prev_ip_addresses":{"type":"array","items":{"type":"object","$ref":"#/definitions/lumera.supernode.v1.IPAddressHistory"}},"prev_supernode_accounts":{"type":"array","items":{"type":"object","$ref":"#/definitions/lumera.supernode.v1.SupernodeAccountHistory"}},"states":{"type":"array","items":{"type":"object","$ref":"#/definitions/lumera.supernode.v1.SuperNodeStateRecord"}},"supernode_account":{"type":"string"},"validator_address":{"type":"string"}}},"lumera.supernode.v1.SuperNodeState":{"type":"string","default":"SUPERNODE_STATE_UNSPECIFIED","enum":["SUPERNODE_STATE_UNSPECIFIED","SUPERNODE_STATE_ACTIVE","SUPERNODE_STATE_DISABLED","SUPERNODE_STATE_STOPPED","SUPERNODE_STATE_PENALIZED"]},"lumera.supernode.v1.SuperNodeStateRecord":{"type":"object","properties":{"height":{"type":"string","format":"int64"},"state":{"$ref":"#/definitions/lumera.supernode.v1.SuperNodeState"}}},"lumera.supernode.v1.SupernodeAccountHistory":{"type":"object","properties":{"account":{"type":"string"},"height":{"type":"string","format":"int64"}}}},"tags":[{"name":"Query"},{"name":"Msg"}]}