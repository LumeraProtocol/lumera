syntax = "proto3";

package lumera.claim;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "lumera/claim/params.proto";

option go_package = "github.com/LumeraProtocol/lumera/x/claim/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  
  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams (MsgUpdateParams) returns (MsgUpdateParamsResponse);
  rpc Claim        (MsgClaim       ) returns (MsgClaimResponse       );
}
// MsgUpdateParams is the Msg/UpdateParams request type.
// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1;

  // params defines the x/claim parameters to update.
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgClaim {
  
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  string oldAddress = 2;
  string newAddress = 3 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string pubKey     = 4;
  string signature  = 5;
}

message MsgClaimResponse {}

