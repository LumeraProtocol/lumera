// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: lumera/action/v1/action_type.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// ActionType enum represents the various types of actions that can be performed.
type ActionType int32

const (
	// The default action type, used when the type is not specified.
	ActionTypeUnspecified ActionType = 0
	// The action type for sense operations.
	ActionTypeSense ActionType = 1
	// The action type for cascade operations.
	ActionTypeCascade ActionType = 2
)

var ActionType_name = map[int32]string{
	0: "ACTION_TYPE_UNSPECIFIED",
	1: "ACTION_TYPE_SENSE",
	2: "ACTION_TYPE_CASCADE",
}

var ActionType_value = map[string]int32{
	"ACTION_TYPE_UNSPECIFIED": 0,
	"ACTION_TYPE_SENSE":       1,
	"ACTION_TYPE_CASCADE":     2,
}

func (x ActionType) String() string {
	return proto.EnumName(ActionType_name, int32(x))
}

func (ActionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ab52561d6faeb08f, []int{0}
}

func init() {
	proto.RegisterEnum("lumera.action.v1.ActionType", ActionType_name, ActionType_value)
}

func init() {
	proto.RegisterFile("lumera/action/v1/action_type.proto", fileDescriptor_ab52561d6faeb08f)
}

var fileDescriptor_ab52561d6faeb08f = []byte{
	// 246 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0xca, 0x29, 0xcd, 0x4d,
	0x2d, 0x4a, 0xd4, 0x4f, 0x4c, 0x2e, 0xc9, 0xcc, 0xcf, 0xd3, 0x2f, 0x33, 0x84, 0xb2, 0xe2, 0x4b,
	0x2a, 0x0b, 0x52, 0xf5, 0x0a, 0x8a, 0xf2, 0x4b, 0xf2, 0x85, 0x04, 0x20, 0x6a, 0xf4, 0x20, 0x32,
	0x7a, 0x65, 0x86, 0x52, 0x22, 0xe9, 0xf9, 0xe9, 0xf9, 0x60, 0x49, 0x7d, 0x10, 0x0b, 0xa2, 0x4e,
	0x6b, 0x15, 0x23, 0x17, 0x97, 0x23, 0x58, 0x4d, 0x48, 0x65, 0x41, 0xaa, 0x90, 0x19, 0x97, 0xb8,
	0xa3, 0x73, 0x88, 0xa7, 0xbf, 0x5f, 0x7c, 0x48, 0x64, 0x80, 0x6b, 0x7c, 0xa8, 0x5f, 0x70, 0x80,
	0xab, 0xb3, 0xa7, 0x9b, 0xa7, 0xab, 0x8b, 0x00, 0x83, 0x94, 0x64, 0xd7, 0x5c, 0x05, 0x51, 0x84,
	0xe2, 0xd0, 0xbc, 0xe2, 0x82, 0xd4, 0xe4, 0xcc, 0xb4, 0xcc, 0xd4, 0x14, 0x21, 0x2d, 0x2e, 0x41,
	0x64, 0x7d, 0xc1, 0xae, 0x7e, 0xc1, 0xae, 0x02, 0x8c, 0x52, 0xc2, 0x5d, 0x73, 0x15, 0xf8, 0x11,
	0x3a, 0x82, 0x53, 0xf3, 0x8a, 0x53, 0x85, 0xf4, 0xb8, 0x84, 0x91, 0xd5, 0x3a, 0x3b, 0x06, 0x3b,
	0x3b, 0xba, 0xb8, 0x0a, 0x30, 0x49, 0x89, 0x76, 0xcd, 0x55, 0x10, 0x44, 0xa8, 0x76, 0x4e, 0x2c,
	0x4e, 0x4e, 0x4c, 0x49, 0x95, 0xe2, 0xe8, 0x58, 0x2c, 0xc7, 0xb0, 0x62, 0x89, 0x1c, 0xa3, 0x93,
	0xf6, 0x89, 0x47, 0x72, 0x8c, 0x17, 0x1e, 0xc9, 0x31, 0x3e, 0x78, 0x24, 0xc7, 0x38, 0xe1, 0xb1,
	0x1c, 0xc3, 0x85, 0xc7, 0x72, 0x0c, 0x37, 0x1e, 0xcb, 0x31, 0x44, 0x09, 0x56, 0x20, 0x85, 0x06,
	0x28, 0x18, 0x8a, 0x93, 0xd8, 0xc0, 0x1e, 0x34, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x38, 0x24,
	0x42, 0xc9, 0x2e, 0x01, 0x00, 0x00,
}
