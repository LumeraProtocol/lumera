// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: pastel/supernode/supernode_state.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type SuperNodeState int32

const (
	Unspecified SuperNodeState = 0
	Active      SuperNodeState = 1
	Disabled    SuperNodeState = 2
	Stopped     SuperNodeState = 3
	Penalized   SuperNodeState = 4
)

var SuperNodeState_name = map[int32]string{
	0: "SUPERNODE_STATE_UNSPECIFIED",
	1: "SUPERNODE_STATE_ACTIVE",
	2: "SUPERNODE_STATE_DISABLED",
	3: "SUPERNODE_STATE_STOPPED",
	4: "SUPERNODE_STATE_PENALIZED",
}

var SuperNodeState_value = map[string]int32{
	"SUPERNODE_STATE_UNSPECIFIED": 0,
	"SUPERNODE_STATE_ACTIVE":      1,
	"SUPERNODE_STATE_DISABLED":    2,
	"SUPERNODE_STATE_STOPPED":     3,
	"SUPERNODE_STATE_PENALIZED":   4,
}

func (x SuperNodeState) String() string {
	return proto.EnumName(SuperNodeState_name, int32(x))
}

func (SuperNodeState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5819151a10e7b7d3, []int{0}
}

func init() {
	proto.RegisterEnum("pastel.supernode.SuperNodeState", SuperNodeState_name, SuperNodeState_value)
}

func init() {
	proto.RegisterFile("pastel/supernode/supernode_state.proto", fileDescriptor_5819151a10e7b7d3)
}

var fileDescriptor_5819151a10e7b7d3 = []byte{
	// 335 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x2b, 0x48, 0x2c, 0x2e,
	0x49, 0xcd, 0xd1, 0x2f, 0x2e, 0x2d, 0x48, 0x2d, 0xca, 0xcb, 0x4f, 0x49, 0x45, 0xb0, 0xe2, 0x8b,
	0x4b, 0x12, 0x4b, 0x52, 0xf5, 0x0a, 0x8a, 0xf2, 0x4b, 0xf2, 0x85, 0x04, 0x20, 0xea, 0xf4, 0xe0,
	0xb2, 0x52, 0x22, 0xe9, 0xf9, 0xe9, 0xf9, 0x60, 0x49, 0x7d, 0x10, 0x0b, 0xa2, 0x4e, 0xeb, 0x07,
	0x23, 0x17, 0x5f, 0x30, 0x48, 0x8d, 0x5f, 0x7e, 0x4a, 0x6a, 0x30, 0xc8, 0x00, 0x21, 0x03, 0x2e,
	0xe9, 0xe0, 0xd0, 0x00, 0xd7, 0x20, 0x3f, 0x7f, 0x17, 0xd7, 0xf8, 0xe0, 0x10, 0xc7, 0x10, 0xd7,
	0xf8, 0x50, 0xbf, 0xe0, 0x00, 0x57, 0x67, 0x4f, 0x37, 0x4f, 0x57, 0x17, 0x01, 0x06, 0x29, 0xfe,
	0xae, 0xb9, 0x0a, 0xdc, 0xa1, 0x79, 0xc5, 0x05, 0xa9, 0xc9, 0x99, 0x69, 0x99, 0xa9, 0x29, 0x42,
	0x6a, 0x5c, 0x62, 0xe8, 0x3a, 0x1c, 0x9d, 0x43, 0x3c, 0xc3, 0x5c, 0x05, 0x18, 0xa5, 0xb8, 0xba,
	0xe6, 0x2a, 0xb0, 0x39, 0x26, 0x97, 0x64, 0x96, 0xa5, 0x0a, 0x69, 0x71, 0x49, 0xa0, 0xab, 0x73,
	0xf1, 0x0c, 0x76, 0x74, 0xf2, 0x71, 0x75, 0x11, 0x60, 0x92, 0xe2, 0xe9, 0x9a, 0xab, 0xc0, 0xe1,
	0x92, 0x59, 0x9c, 0x98, 0x94, 0x93, 0x9a, 0x22, 0xa4, 0xc1, 0x25, 0x8e, 0xae, 0x36, 0x38, 0xc4,
	0x3f, 0x20, 0xc0, 0xd5, 0x45, 0x80, 0x59, 0x8a, 0xbb, 0x6b, 0xae, 0x02, 0x7b, 0x70, 0x49, 0x7e,
	0x41, 0x41, 0x6a, 0x8a, 0x90, 0x0e, 0x97, 0x24, 0xba, 0xca, 0x00, 0x57, 0x3f, 0x47, 0x1f, 0xcf,
	0x28, 0x57, 0x17, 0x01, 0x16, 0x29, 0xde, 0xae, 0xb9, 0x0a, 0x9c, 0x01, 0xa9, 0x79, 0x89, 0x39,
	0x99, 0x55, 0xa9, 0x29, 0x52, 0x1c, 0x1d, 0x8b, 0xe5, 0x18, 0x56, 0x2c, 0x91, 0x63, 0x74, 0xf2,
	0x3e, 0xf1, 0x48, 0x8e, 0xf1, 0xc2, 0x23, 0x39, 0xc6, 0x07, 0x8f, 0xe4, 0x18, 0x27, 0x3c, 0x96,
	0x63, 0xb8, 0xf0, 0x58, 0x8e, 0xe1, 0xc6, 0x63, 0x39, 0x86, 0x28, 0xc3, 0xf4, 0xcc, 0x92, 0x8c,
	0xd2, 0x24, 0xbd, 0xe4, 0xfc, 0x5c, 0x7d, 0x48, 0x38, 0xe6, 0xa5, 0x96, 0x94, 0xe7, 0x17, 0x65,
	0x43, 0x79, 0xfa, 0x15, 0x48, 0xe1, 0x5f, 0x52, 0x59, 0x90, 0x5a, 0x9c, 0xc4, 0x06, 0x0e, 0x4e,
	0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0d, 0xf9, 0x31, 0x83, 0xa0, 0x01, 0x00, 0x00,
}
